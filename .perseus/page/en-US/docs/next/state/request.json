{"state":{"content":"<h1>Request-time state</h1>\n<p>Request-time state can be thought of as the next level up from <a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/build\">build-time state</a>, because it provides access to everything build state does, plus the actual HTTP request of the user who made the query. This allows you to generate user-specific state: for instance a custom dashboard could be prerendered for them based on their settings.</p>\n<p>Here's an example of request state being used to show a user their own IP address (as their browser reports it, which can be spoofed):</p>\n<pre><code class=\"language-rust\">use perseus::prelude::*;\nuse serde::{Deserialize, Serialize};\nuse sycamore::prelude::*;\n\n#[derive(Serialize, Deserialize, Clone, ReactiveState)]\n#[rx(alias = &quot;PageStateRx&quot;)]\nstruct PageState {\n    ip: String,\n}\n\nfn request_state_page&lt;'a, G: Html&gt;(cx: BoundedScope&lt;'_, 'a&gt;, state: &amp;'a PageStateRx) -&gt; View&lt;G&gt; {\n    view! { cx,\n        p {\n            (\n                format!(&quot;Your IP address is {}.&quot;, state.ip.get())\n            )\n        }\n    }\n}\n\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\n    Template::build(&quot;request_state&quot;)\n        .request_state_fn(get_request_state)\n        .view_with_state(request_state_page)\n        .build()\n}\n\n// This returns a `Result&lt;T, BlamedError&lt;E&gt;&gt;` (or just `T`) because, obviously,\n// it will be run at request-time: any errors could be a mising file (our\n// fault), or a malformed cookie (the client's fault), etc., so we have to note\n// the blame to get an accurate HTTP status code. This example is really\n// infallible, but we've spelled it all out rather than using `T` so you can see\n// how it works.\n#[engine_only_fn]\nasync fn get_request_state(\n    // We get all the same info as build state in here\n    _info: StateGeneratorInfo&lt;()&gt;,\n    // Unlike in build state, in request state we *also* get access to the information that the\n    // user sent with their HTTP request IN this example, we extract the browser's reporting of\n    // their IP address and display it to them\n    req: Request,\n) -&gt; Result&lt;PageState, BlamedError&lt;std::convert::Infallible&gt;&gt; {\n    Ok(PageState {\n        ip: format!(\n            &quot;{:?}&quot;,\n            req.headers()\n                // NOTE: This header can be trivially spoofed, and may well not be the user's actual\n                // IP address\n                .get(&quot;X-Forwarded-For&quot;)\n                .unwrap_or(&amp;perseus::http::HeaderValue::from_str(&quot;hidden from view!&quot;).unwrap())\n        ),\n    })\n}\n\n</code></pre>\n<p>Just as with a <code>get_build_state</code> function, this <code>get_request_state</code> function is <code>async</code> and returns a <code>BlamedError&lt;E&gt;</code>, where <code>E</code> is any compliant error type, but it could return the <code>PageState</code> directly if it wanted to. If you need a refresher on these properties, especially on error handling in these kinds of functions, see <a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/build\">this page</a>.</p>\n<p>Importantly, request-time state gives us access to the usual <a href=\"https://docs.rs/perseus/0.4.0-beta/perseus/prelude/struct.StateGeneratorInfo.html\"><code>StateGeneratorInfo</code></a>, which contains the path, locale, and <a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/helper\">helper state</a>, plus the <a href=\"https://framesurge.sh/perseus/en-US/docs/next/prelude/type.Request@perseus\"><code>Request</code></a>, which is an HTTP request with the body stripped out. This is done because the body is meaningless in Perseus requests, and anything that needs it shoudl use [custom API endpoints].</p>\n<p>In this example, we're using <code>req</code> to access the headers of the request, which are the main things you'll use (since these contain cookies, etc.). Here, we're just accessing the non-standard <code>X-Forwarded-For</code> header, which represents the IP address of the client in many cases.</p>\n<p>Critically, the request provided to this function is <strong>not</strong> the 'real' request, meaning altering parts of it will have absolutely no effect whatsoever --- it's just a representation of it provided to your functions so they can access user details. For example, if you wanted to set headers, you should not add them here, but [do this] instead.</p>\n<p>A request-time state generating function can be specified using <code>.request_state_fn()</code> on <code>Template</code>.</p>\n","current_version":"next","manifest":{"0.1.x":{"docs_rs":"0.1","git":"v0.1.4","state":"outdated"},"0.2.x":{"docs_rs":"0.2","git":"v0.2.3","state":"outdated"},"0.3.0-0.3.3":{"docs_rs":"0.3.3","git":"v0.3.3","state":"outdated"},"0.3.4":{"docs_rs":"0.3","git":"v0.3.6","state":"stable"},"0.4.x":{"docs_rs":"0.4.0-beta","git":"HEAD","state":"beta"}},"sidebar_content":"<h1>Introduction</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/intro\">Introduction</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/quickstart\">Quickstart</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/what-is-perseus\">What is Perseus?</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/core-principles\">Core Principles</a></li>\n</ul>\n<h1>Your First App</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/installation\">Installing Perseus</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/defining\">Defining your app</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/generating-pages\">Generating pages</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/dev-cycle\">Development cycle</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/error-handling\">Error handling</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/deploying\">Deploying your app</a></li>\n</ul>\n<h1>Fundamentals</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/perseus-app\"><code>PerseusApp</code></a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/reactor\">The reactor</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/routing\">Routing and navigation</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/preloading\">Preloading</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/i18n\">Internationalization</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/error-views\">Error views</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/hydration\">Hydration</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/static-content\">Static content</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/head-headers\">Heads and headers</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/styling\">Styling</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/js-interop\">Working with JS</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/serving-exporting\">Servers and exporting</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/debugging\">Debugging</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/testing\">Writing tests</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/plugins\">Plugins</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/compilation-times\">Improving Compilation Times</a></li>\n</ul>\n<h1>The State Platform</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/intro\">Understanding state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/build\">Build-time state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/request\">Request-time state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/revalidation\">Revalidation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/incremental\">Incremental generation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/amalgamation\">State amalgamation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/browser\">Using state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/global\">Global state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/helper\">Helper state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/suspense\">Suspended state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/freezing-thawing\">Freezing and thawing</a></li>\n</ul>\n<h1>Capsules</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/capsules/intro\">Introduction</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/capsules/capsules-vs-templates\">Capsules vs. templates</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/capsules/delayed\">Delayed widgets</a></li>\n</ul>\n<h1>Miscellaneous</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/migrating\">Migrating from v0.3.x</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/faq\">Common pitfalls and FAQs</a></li>\n</ul>\n","status":"Next","title":"Request-time state"},"head":"<title>Request-time state | Perseus Docs</title><link rel=\"stylesheet\" href=\".perseus/static/styles/markdown.css\"/><link rel=\"stylesheet\" href=\".perseus/static/styles/docs_links_markdown.css\"/><link rel=\"stylesheet\" href=\".perseus/static/prism.css\"/>"}