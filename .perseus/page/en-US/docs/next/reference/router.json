{"state":{"content":"<h1>Router</h1>\n<p>Most of the time, you will never have to worry about how Perseus' router works. However, if you're working on a new server integration, or something else very low-level, you might encounter some thorns to do with how Perseus figures out which page to render. This might seem like a simple problem. The user requests <code>/about</code>? Render the <code>about</code> template. Now introduce <a href=\"https://framesurge.sh/perseus/en-US/docs/next/reference/state-generation\">incremental generation</a>. Now it's a little more complex. For clarity, this page will outline the way Perseus' routing algorithm actually works internally.</p>\n<p>If you're just building apps with Perseus, you shouldn't have to read this, it's more for those working with the internals.</p>\n<p>Note that this algorithm is executed on the client-side for <em>subsequent loads</em> and on the server-side for <em>initial loads</em> (see <a href=\"https://framesurge.sh/perseus/en-US/docs/next/reference/initial_subsequent_loads\">here</a> for details on those).</p>\n<p>Also note that Perseus' routing algorithm is based on a file called <code>render_conf.json</code>, which is stored in <code>dist/</code>. Importantly, this is stored in memory by the server, and it's interpolated directly into the HTML sent to the user's browser. (Meaning apps with <em>very*</em> large numbers of pages should consider incremental generation even if their build times are fine, since it may actually improve load times by a little. Take a look at the <code>&lt;script&gt;</code> tags in the <code>&lt;head&gt;</code> of this website to see what we mean!)</p>\n<p>Here's an example render configuration (for the <a href=\"https://github.com/arctic-hen7/perseus/blob/main/examples/core/state_generation\">state generation example</a>), which maps URL to template name.</p>\n<pre><code class=\"language-json\">{\n    &quot;amalgamation&quot;:&quot;amalgamation&quot;,\n    &quot;revalidation_and_incremental_generation/test&quot;:&quot;revalidation_and_incremental_generation&quot;,\n    &quot;incremental_generation/blah/test/blah&quot;:&quot;incremental_generation&quot;,\n    &quot;incremental_generation/test&quot;:&quot;incremental_generation&quot;,\n    &quot;build_paths/blah/test/blah&quot;:&quot;build_paths&quot;,\n    &quot;build_paths/test&quot;:&quot;build_paths&quot;,\n    &quot;revalidation_and_incremental_generation/*&quot;:&quot;revalidation_and_incremental_generation&quot;,\n    &quot;request_state&quot;:&quot;request_state&quot;,\n    &quot;build_paths&quot;:&quot;build_paths&quot;,\n    &quot;revalidation&quot;:&quot;revalidation&quot;,\n    &quot;build_state&quot;:&quot;build_state&quot;,\n    &quot;incremental_generation/*&quot;:&quot;incremental_generation&quot;,\n    &quot;revalidation_and_incremental_generation/blah/test/blah&quot;:&quot;revalidation_and_incremental_generation&quot;\n}\n</code></pre>\n<p>Here are the algorithm's steps (see <a href=\"https://github.com/arctic-hen7/perseus/blob/main/packages/perseus/src/router/match_route.rs\"><code>match_route.rs</code></a>):</p>\n<ol>\n<li>If the path is empty, set it to <code>index</code> (which is used for the landing page).</li>\n<li>Try to directly get the template name by trying the path as a key. This would work for anything not using incremental generation (in the above example, anything other than <code>incremental_generation/*</code> and <code>revalidation_and_incremental_generation/*</code>).</li>\n<li>Split the path into sections by <code>/</code> and iterate through them, performing the following on each section (iterating forwards from the beginning of the path, becoming more and more specific):\n<ol>\n<li>Make a path out of all segments up to the current point, adding <code>/*</code> at the end (indicative of incremental generation in the render configuration).</li>\n<li>Try that as a key, return if it works.</li>\n<li>Even if we have something, continue iterating until we have nothing. This way, we get the most specific path possible (and we can have incremental generation in incremental generation).</li>\n</ol>\n</li>\n</ol>\n","current_version":"next","manifest":{"0.1.x":{"docs_rs":"0.1","git":"v0.1.4","state":"outdated"},"0.2.x":{"docs_rs":"0.2","git":"v0.2.3","state":"outdated"},"0.3.0-0.3.3":{"docs_rs":"0.3.3","git":"v0.3.3","state":"outdated"},"0.3.4":{"docs_rs":"0.3","git":"v0.3.6","state":"stable"},"0.4.x":{"docs_rs":"0.4.0-beta","git":"HEAD","state":"beta"}},"sidebar_content":"<h1>Introduction</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/intro\">Introduction</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/quickstart\">Quickstart</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/what-is-perseus\">What is Perseus?</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/core-principles\">Core Principles</a></li>\n</ul>\n<h1>Your First App</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/installation\">Installing Perseus</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/defining\">Defining your app</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/generating-pages\">Generating pages</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/dev-cycle\">Development cycle</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/error-handling\">Error handling</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/deploying\">Deploying your app</a></li>\n</ul>\n<h1>Fundamentals</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/perseus-app\"><code>PerseusApp</code></a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/reactor\">The reactor</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/routing\">Routing and navigation</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/preloading\">Preloading</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/i18n\">Internationalization</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/error-views\">Error views</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/hydration\">Hydration</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/static-content\">Static content</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/headers\">Setting headers</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/styling\">Styling</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/js-interop\">Working with JS</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/serving-exporting\">Servers and exporting</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/debugging\">Debugging</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/testing\">Writing tests</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/plugins\">Plugins</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/compilation-times\">Improving Compilation Times</a></li>\n</ul>\n<h1>The State Platform</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/intro\">Understanding state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/build\">Build-time state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/request\">Request-time state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/revalidation\">Revalidation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/incremental\">Incremental generation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/amalgamation\">State amalgamation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/browser\">Using state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/global\">Global state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/helper\">Helper state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/suspense\">Suspended state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/freezing-thawing\">Freezing and thawing</a></li>\n</ul>\n<h1>Capsules</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/capsules/intro\">Introduction</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/capsules/capsules-vs-templates\">Capsules vs. templates</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/capsules/delayed\">Delayed widgets</a></li>\n</ul>\n<h1>Miscellaneous</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/migrating\">Migrating from v0.3.x</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/faq\">Common pitfalls and FAQs</a></li>\n</ul>\n","status":"Next","title":"Router"},"head":"<title>Router | Perseus Docs</title><link rel=\"stylesheet\" href=\".perseus/static/styles/markdown.css\"/><link rel=\"stylesheet\" href=\".perseus/static/styles/docs_links_markdown.css\"/><link rel=\"stylesheet\" href=\".perseus/static/prism.css\"/>"}