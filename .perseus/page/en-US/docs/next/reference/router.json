{"state":"{\"title\":\"Router\",\"content\":\"<h1>Router</h1>\\n<p>Most of the time, you will never have to worry about how Perseus' router works. However, if you're working on a new server integration, or something else very low-level, you might encounter some thorns to do with how Perseus figures out which page to render. This might seem like a simple problem. The user requests <code>/about</code>? Render the <code>about</code> template. Now introduce <a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/state-generation\\\">incremental generation</a>. Now it's a little more complex. For clarity, this page will outline the way Perseus' routing algorithm actually works internally.</p>\\n<p>If you're just building apps with Perseus, you shouldn't have to read this, it's more for those working with the internals.</p>\\n<p>Note that this algorithm is executed on the client-side for <em>subsequent loads</em> and on the server-side for <em>initial loads</em> (see <a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/initial_subsequent_loads\\\">here</a> for details on those).</p>\\n<p>Also note that Perseus' routing algorithm is based on a file called <code>render_conf.json</code>, which is stored in <code>dist/</code>. Importantly, this is stored in memory by the server, and it's interpolated directly into the HTML sent to the user's browser. (Meaning apps with <em>very*</em> large numbers of pages should consider incremental generation even if their build times are fine, since it may actually improve load times by a little. Take a look at the <code>&lt;script&gt;</code> tags in the <code>&lt;head&gt;</code> of this website to see what we mean!)</p>\\n<p>Here's an example render configuration (for the <a href=\\\"https://github.com/arctic-hen7/perseus/blob/main/examples/core/state_generation\\\">state generation example</a>), which maps URL to template name.</p>\\n<pre><code class=\\\"language-json\\\">{\\n    &quot;amalgamation&quot;:&quot;amalgamation&quot;,\\n    &quot;revalidation_and_incremental_generation/test&quot;:&quot;revalidation_and_incremental_generation&quot;,\\n    &quot;incremental_generation/blah/test/blah&quot;:&quot;incremental_generation&quot;,\\n    &quot;incremental_generation/test&quot;:&quot;incremental_generation&quot;,\\n    &quot;build_paths/blah/test/blah&quot;:&quot;build_paths&quot;,\\n    &quot;build_paths/test&quot;:&quot;build_paths&quot;,\\n    &quot;revalidation_and_incremental_generation/*&quot;:&quot;revalidation_and_incremental_generation&quot;,\\n    &quot;request_state&quot;:&quot;request_state&quot;,\\n    &quot;build_paths&quot;:&quot;build_paths&quot;,\\n    &quot;revalidation&quot;:&quot;revalidation&quot;,\\n    &quot;build_state&quot;:&quot;build_state&quot;,\\n    &quot;incremental_generation/*&quot;:&quot;incremental_generation&quot;,\\n    &quot;revalidation_and_incremental_generation/blah/test/blah&quot;:&quot;revalidation_and_incremental_generation&quot;\\n}\\n</code></pre>\\n<p>Here are the algorithm's steps (see <a href=\\\"https://github.com/arctic-hen7/perseus/blob/main/packages/perseus/src/router/match_route.rs\\\"><code>match_route.rs</code></a>):</p>\\n<ol>\\n<li>If the path is empty, set it to <code>index</code> (which is used for the landing page).</li>\\n<li>Try to directly get the template name by trying the path as a key. This would work for anything not using incremental generation (in the above example, anything other than <code>incremental_generation/*</code> and <code>revalidation_and_incremental_generation/*</code>).</li>\\n<li>Split the path into sections by <code>/</code> and iterate through them, performing the following on each section (iterating forwards from the beginning of the path, becoming more and more specific):\\n<ol>\\n<li>Make a path out of all segments up to the current point, adding <code>/*</code> at the end (indicative of incremental generation in the render configuration).</li>\\n<li>Try that as a key, return if it works.</li>\\n<li>Even if we have something, continue iterating until we have nothing. This way, we get the most specific path possible (and we can have incremental generation in incremental generation).</li>\\n</ol>\\n</li>\\n</ol>\\n\",\"sidebar_content\":\"<h1>Introduction</h1>\\n<ul>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/intro\\\">Introduction</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/what-is-perseus\\\">What is Perseus?</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/getting-started/intro\\\">Getting Started</a>\\n<ul>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/getting-started/installation\\\">Installation</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/getting-started/first-app\\\">Your First App</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/core-principles\\\">Core Principles</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/tutorials/second-app\\\">Your Second App</a></li>\\n</ul>\\n<h1>Reference</h1>\\n<ul>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/features\\\">Feature Discovery Terminal</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/compilation-times\\\">Improving Compilation Times</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/state-generation\\\">State Generation</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/live-reloading-and-hsr\\\">Live Reloading and HSR</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/i18n\\\">Internationalization</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/hydration\\\">Hydration</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/exporting\\\">Static Exporting</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/plugins\\\">Plugins</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/deploying\\\">Deploying</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/architecture\\\">Architecture Details</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/router\\\">Router</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/initial_subsequent_loads\\\">Initial vs. Subsequent Loads</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/migrating\\\">Migrating from v0.3.x</a></li>\\n<li><a href=\\\"https://framesurge.sh/perseus/en-US/docs/next/reference/faq\\\">Common Pitfalls and Known Bugs</a></li>\\n</ul>\\n\",\"status\":\"Next\",\"manifest\":{\"0.3.0-0.3.3\":{\"state\":\"outdated\",\"git\":\"v0.3.3\",\"docs_rs\":\"0.3.3\"},\"0.1.x\":{\"state\":\"outdated\",\"git\":\"v0.1.4\",\"docs_rs\":\"0.1\"},\"0.3.4\":{\"state\":\"stable\",\"git\":\"v0.3.6\",\"docs_rs\":\"0.3\"},\"0.4.x\":{\"state\":\"beta\",\"git\":\"HEAD\",\"docs_rs\":\"0.4.0-beta\"},\"0.2.x\":{\"state\":\"outdated\",\"git\":\"v0.2.3\",\"docs_rs\":\"0.2\"}},\"current_version\":\"next\"}","head":"<title>Router | Perseus Docs</title><link rel=\"stylesheet\" href=\".perseus/static/styles/markdown.css\"/><link rel=\"stylesheet\" href=\".perseus/static/styles/docs_links_markdown.css\"/><link rel=\"stylesheet\" href=\".perseus/static/prism.css\"/>"}