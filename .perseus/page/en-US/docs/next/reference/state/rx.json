{"content":"<header class=\"shadow-md sm:p-2 w-full bg-white dark:text-white dark:bg-navy mb-20\" data-hk=\"3.0\"><div class=\"flex justify-between\" data-hk=\"3.1\"><a class=\"justify-self-start self-center m-3 ml-5 text-md sm:text-2xl\" href=\"en-US/\" data-hk=\"3.2\">Perseus</a><div data-hk=\"3.3\" class=\"md:hidden m-3 mr-5 tham tham-e-spin tham-w-6 \"><div data-hk=\"3.4\" class=\"tham-box\"><div class=\"dark:bg-white tham-inner\" data-hk=\"3.5\"></div></div></div><nav class=\"hidden md:flex\" data-hk=\"3.6\"><ul data-hk=\"3.7\" class=\"mr-5 flex\"><li class=\"m-3 p-1\" data-hk=\"4.0\"><a data-hk=\"4.1\" class=\"px-2\" href=\"en-US/docs\">Docs</a></li><li class=\"m-3 p-1\" data-hk=\"4.2\"><a class=\"px-2\" data-hk=\"4.3\" href=\"en-US/comparisons\">Comparisons</a></li><li data-hk=\"4.4\" class=\"m-3 p-1\"><a data-hk=\"4.5\" class=\"px-2\" href=\"en-US/plugins\">Plugins</a></li></ul></nav></div><nav class=\"md:hidden w-full text-center justify-center overflow-y-scroll hidden\" id=\"mobile_nav_menu\" data-hk=\"3.8\"><div class=\"mr-5 overflow-y-scroll\" style=\"max-height: 500px\" data-hk=\"3.9\"><ul data-hk=\"3.10\"><li data-hk=\"5.0\" class=\"m-3 p-1\"><a data-hk=\"5.1\" href=\"en-US/docs\" class=\"px-2\">Docs</a></li><li data-hk=\"5.2\" class=\"m-3 p-1\"><a href=\"en-US/comparisons\" class=\"px-2\" data-hk=\"5.3\">Comparisons</a></li><li class=\"m-3 p-1\" data-hk=\"5.4\"><a data-hk=\"5.5\" href=\"en-US/plugins\" class=\"px-2\">Plugins</a></li></ul><hr data-hk=\"3.11\"/><div data-hk=\"3.12\" class=\"text-left p-3\"><!--#--><!----><select data-hk=\"6.0\" class=\"p-2 rounded-md text-white bg-indigo-500\"><option selected=\"\" data-hk=\"6.1\" value=\"next\">Next (unreleased)</option><!--#--><!--/--><option value=\"0.3.4\" data-hk=\"6.2\">v⁨0.3.4⁩ (stable)</option><!--#--><option data-hk=\"6.3\" value=\"0.3.0-0.3.3\">v⁨0.3.0-0.3.3⁩ (outdated)</option><option value=\"0.2.x\" data-hk=\"6.4\">v⁨0.2.x⁩ (outdated)</option><option data-hk=\"6.5\" value=\"0.1.x\">v⁨0.1.x⁩ (outdated)</option><!--/--></select><!--/--><div class=\"docs-links-markdown\" data-hk=\"3.13\"><h1>Introduction</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/intro\">Introduction</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/what-is-perseus\">What is Perseus?</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/core-principles\">Core Principles</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/hello-world\">Hello World!</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/second-app\">Your Second App</a></li>\n</ul>\n<hr />\n<h1>Reference</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/perseus-app\"><code>PerseusApp</code></a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/define-app\"><code>define_app!</code></a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/views\">Writing Views</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/index-view\">The Index View</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/debugging\">Debugging</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/live-reloading\">Live Reloading</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/intro\">Templates and Routing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/metadata-modification\">Modifying the <code>&lt;head&gt;</code></a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/setting-headers\">Modifying HTTP Headers</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/router-state\">Listening to the Router</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/error-pages\">Error Pages</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/static-content\">Static Content</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/intro\">Internationalization</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/defining\">Defining Translations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/using\">Using Translations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/translations-managers\">Translations Managers</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/other-engines\">Other Translation Engines</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/intro\">Rendering Strategies</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-state\">Build State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-paths\">Build Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/request-state\">Request State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/revalidation\">Revalidation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/incremental\">Incremental Generation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/amalgamation\">State Amalgamation</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/hydration\">Hydration</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/rx\">Reactive State</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/global\">Global State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/freezing\">State Freezing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/idb-freezing\">Freezing to IndexedDB</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/hsr\">Hot State Reloading (HSR)</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/cli\">CLI</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/ejecting\">Ejecting</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/snooping\">Snooping</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/intro\">Testing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/checkpoints\">Checkpoints</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/fantoccini-basics\">Fantoccini Basics</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/manual\">Manual Testing</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/styling\">Styling</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/server-communication\">Communicating with a Server</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/stores\">Stores</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/exporting\">Static Exporting</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/intro\">Plugins</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/functional\">Functional Actions</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/control\">Control Actions</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/using\">Using Plugins</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/tinker\">The <code>tinker</code> Action</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/writing\">Writing Plugins</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/security\">Security Considerations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/publishing\">Publishing Plugins</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/engines\">Engines</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/intro\">Deploying</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverful\">Server Deployment</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverless\">Serverless Deployment</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/size\">Optimizing Code Size</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/relative-paths\">Relative Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/docker\">Docker Deployment</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/updating\">Migrating from v0.3.3</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/pitfalls-and-bugs\">Common Pitfalls and Known Bugs</a></li>\n</ul>\n<hr />\n<h1>Advanced</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/intro\">Under the Hood</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/arch\">Architecture</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/initial-loads\">Initial Loads</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/subsequent-loads\">Subsequent Loads</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/routing\">Routing</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/route-announcer\">Route Announcer</a></li>\n</ul>\n<hr />\n<h1>Further Tutorials</h1>\n<ul>\n<li><a href=\"docs/tutorials/auth\">Authentication</a></li>\n</ul>\n</div></div></div></nav></header><div class=\"mt-14 xs:mt-16 sm:mt-20 lg:mt-25 overflow-y-auto flex\" data-hk=\"3.14\"><div data-hk=\"3.15\" class=\"flex w-full\"><div class=\"h-full hidden md:block max-w-xs w-full border-r\" data-hk=\"3.16\"><div class=\"mr-5\" data-hk=\"3.17\"><div data-hk=\"3.18\" class=\"text-left text-black dark:text-white p-3\"><aside data-hk=\"3.19\"><!--#--><!----><select class=\"p-2 rounded-md text-white bg-indigo-500\" data-hk=\"7.0\"><option value=\"next\" data-hk=\"7.1\" selected=\"\">Next (unreleased)</option><!--#--><!--/--><option value=\"0.3.4\" data-hk=\"7.2\">v⁨0.3.4⁩ (stable)</option><!--#--><option value=\"0.3.0-0.3.3\" data-hk=\"7.3\">v⁨0.3.0-0.3.3⁩ (outdated)</option><option value=\"0.2.x\" data-hk=\"7.4\">v⁨0.2.x⁩ (outdated)</option><option data-hk=\"7.5\" value=\"0.1.x\">v⁨0.1.x⁩ (outdated)</option><!--/--></select><!--/--><div data-hk=\"3.20\" class=\"docs-links-markdown\"><h1>Introduction</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/intro\">Introduction</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/what-is-perseus\">What is Perseus?</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/core-principles\">Core Principles</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/hello-world\">Hello World!</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/second-app\">Your Second App</a></li>\n</ul>\n<hr />\n<h1>Reference</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/perseus-app\"><code>PerseusApp</code></a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/define-app\"><code>define_app!</code></a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/views\">Writing Views</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/index-view\">The Index View</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/debugging\">Debugging</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/live-reloading\">Live Reloading</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/intro\">Templates and Routing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/metadata-modification\">Modifying the <code>&lt;head&gt;</code></a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/setting-headers\">Modifying HTTP Headers</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/router-state\">Listening to the Router</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/error-pages\">Error Pages</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/static-content\">Static Content</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/intro\">Internationalization</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/defining\">Defining Translations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/using\">Using Translations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/translations-managers\">Translations Managers</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/other-engines\">Other Translation Engines</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/intro\">Rendering Strategies</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-state\">Build State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-paths\">Build Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/request-state\">Request State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/revalidation\">Revalidation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/incremental\">Incremental Generation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/amalgamation\">State Amalgamation</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/hydration\">Hydration</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/rx\">Reactive State</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/global\">Global State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/freezing\">State Freezing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/idb-freezing\">Freezing to IndexedDB</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/hsr\">Hot State Reloading (HSR)</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/cli\">CLI</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/ejecting\">Ejecting</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/snooping\">Snooping</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/intro\">Testing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/checkpoints\">Checkpoints</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/fantoccini-basics\">Fantoccini Basics</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/manual\">Manual Testing</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/styling\">Styling</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/server-communication\">Communicating with a Server</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/stores\">Stores</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/exporting\">Static Exporting</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/intro\">Plugins</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/functional\">Functional Actions</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/control\">Control Actions</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/using\">Using Plugins</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/tinker\">The <code>tinker</code> Action</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/writing\">Writing Plugins</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/security\">Security Considerations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/publishing\">Publishing Plugins</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/engines\">Engines</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/intro\">Deploying</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverful\">Server Deployment</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverless\">Serverless Deployment</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/size\">Optimizing Code Size</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/relative-paths\">Relative Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/docker\">Docker Deployment</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/updating\">Migrating from v0.3.3</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/pitfalls-and-bugs\">Common Pitfalls and Known Bugs</a></li>\n</ul>\n<hr />\n<h1>Advanced</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/intro\">Under the Hood</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/arch\">Architecture</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/initial-loads\">Initial Loads</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/subsequent-loads\">Subsequent Loads</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/routing\">Routing</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/route-announcer\">Route Announcer</a></li>\n</ul>\n<hr />\n<h1>Further Tutorials</h1>\n<ul>\n<li><a href=\"docs/tutorials/auth\">Authentication</a></li>\n</ul>\n</div></aside></div></div></div><div class=\"h-full flex w-full\" data-hk=\"3.21\"><div data-hk=\"3.22\" class=\"px-3 w-full sm:mr-auto sm:ml-auto sm:max-w-prose lg:max-w-3xl xl:max-w-4xl 2xl:max-w-5xl\"><!--#--><div data-hk=\"3.23\" class=\"ring-4 ring-orange-400 p-4 rounded-lg mt-1\"><div data-hk=\"3.24\" class=\"flex flex-col 2xs:flex-row dark:text-white\"><span data-hk=\"3.25\" style=\"fill: #fb923c;\" class=\"self-center mr-2\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"auto\" viewBox=\"0 0 24 24\" width=\"2.25rem\" fill=\"\\#000000\"><path d=\"M12 7c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1zm-.01-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-3h-2v-2h2v2z\"/></svg></span><p data-hk=\"3.26\">This version of the documentation is for a version that has not yet been released, and features documented here may not be present in the latest release. You can see the latest stable version of the docs <a href=\"en-US/docs/0.3.x/intro\" class=\"underline\">here</a>.</p></div></div><!--/--><main class=\"text-black dark:text-white\" data-hk=\"3.27\"><div data-hk=\"2.0\" class=\"markdown\"><h1>Reactive State</h1>\n<p>In v0.3.4, Perseus added support for <em>reactive state</em>, which we talked about a bit in the tutorials at the beginning of the documentation. If you've come from a Perseus version before v0.3.4, this system will be quite new to you, as it adds a whole new platform on which templates can interact with their state. Originally, you could generate state, and then it would be done, and the template would receive it as is. Now, that state can be made <em>reactive</em> by wrapping all its fields inside <code>Signal</code>s, and it will then be added to a global store of page state. The platform this is built on allows a whole new level of state mechanics in Perseus, including <a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/global\">global state</a> and even <a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/hsr\">hot state reloading</a> (a world first to our knowledge)!</p>\n<p>In essence, Perseus now provides a way to make your state automatically reactive, which enables some <em>really</em> cool new features!</p>\n<p>To use this new platform, just annotate a state <code>struct</code> with <code>#[perseus::make_rx(RxName)]</code>, where <code>RxName</code> is the name of the new reactive <code>struct</code> (e.g. <code>IndexState</code> might become <code>IndexStateRx</code>). This macro wraps every single property in your <code>struct</code> in a <code>Signal</code> and produces a new reactive version that way, implementing <code>perseus::state::MakeRx</code> on the original to provide a method <code>.make_rx()</code> that can be used to convert from the unreactive version to the reactive one (there's also the reverse through <code>perseus::state::MakeUnrx</code>, which is implemented on the new, reactive version). If you have fields on your <code>struct</code> that are themselves <code>struct</code>s, you'll need to nest that reactivity, which you can do by adding <code>#[rx::nested(&quot;field&quot;, FieldRxName)]</code> just underneath the <code>#[make_rx(...)]</code> macro, providing it the name of the field and the type of the reactive version (which you'd generated with <code>#[make_rx(...)]</code>). Notably, <code>#[make_rx(...)]</code> automatically derives <code>Serialize</code>, <code>Deserialize</code>, and <code>Clone</code> on your <code>struct</code> (so don't derive them yourself!).</p>\n<p><em>Note: Sycamore has a proposal to support fine-grained reactivity like this through observers, which will supersede this when they're released, and they'll make all this even faster! Right now, everything has to be cloned unfortunately.</em></p>\n<p>Once you've got some reactive versions of your state <code>struct</code>s ready, you should generate the unreactive versions as usual in functions like <code>get_build_state()</code>, but then set the first argument on your template function to the reactive version (e.g. <code>IndexStateRx</code> rather than <code>IndexState</code>). This requires Perseus to convert between the unreactive and reactive versions in the background, which you can enable by changing the old <code>#[template(...)]</code> (used in the old documentation/tutorials) to <code>#[template_rx]</code> and removing the Sycamore <code>#[component]</code> annotation (this is added automatically by <code>#[template_rx]</code>). Behind the scenes, you've just enabled the world's most powerful state platform, and not only will your state be made reactive for you, it will be added to the <em>page state store</em>, a global store that enables Perseus to cache the state of a page. So, if your users start filling out forms on page 1 and then go to page 2, and then come back to page 1, their forms will be just how they left them. (Not sure about you, but it feels to us like it's about time this was the default on the web!)</p>\n<p><em>Side note: if you think this behavior is horrific, you can still use the old `#[template(...)] macro, and we have no plans to deprecate it. Perseus' original unreactive state system worked very well, and there are still plenty of use cases where you may not want all this newfangled reactive state nonsense (like completely static blogs).</em></p>\n<p>You may be wondering what the benefits of having a reactive state are. Well, the intention is this: every possible state your page can be in should be representable in your state. That means that, whenever you'd usually declare a new variable in a <code>Signal</code> to handle some state, you can move it into your template's state and handle it there instead, making things cleaner and taking advantage of Perseus' state caching system. If your entire app doesn't use any of this though, you can still trivially use the old state platform if you want to.</p>\n<h2>Example</h2>\n<p>This can all be a bit hard to imagine, so here's how it looks in practice with a simple state involving a <code>username</code> that the user can type in, and then it'll be displayed back to them. You can see the source <a href=\"https://github.com/arctic-hen7/perseus/blob/main/examples/core/rx_state/src/templates/index.rs\">here</a>.</p>\n<pre><code class=\"language-rust\">use perseus::{Html, RenderFnResultWithCause, Template};\nuse sycamore::prelude::{view, SsrNode, View};\n\n#[perseus::make_rx(IndexPageStateRx)]\npub struct IndexPageState {\n    pub username: String,\n}\n\n// This macro will make our state reactive *and* store it in the page state store, which means it'll be the same even if we go to the about page and come back (as long as we're in the same session)\n#[perseus::template_rx]\npub fn index_page(state: IndexPageStateRx) -&gt; View&lt;G&gt; {\n    let username = state.username;\n    let username_2 = username.clone();\n\n    view! {\n        p { (format!(&quot;Greetings, {}!&quot;, username.get())) }\n        input(bind:value = username_2, placeholder = &quot;Username&quot;)\n\n        a(href = &quot;about&quot;, id = &quot;about-link&quot;) { &quot;About&quot; }\n    }\n}\n\n#[perseus::head]\npub fn head() -&gt; View&lt;SsrNode&gt; {\n    view! {\n        title { &quot;Index Page&quot; }\n    }\n}\n\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\n    Template::new(&quot;index&quot;)\n        .template(index_page)\n        .head(head)\n        .build_state_fn(get_build_state)\n}\n\n#[perseus::autoserde(build_state)]\npub async fn get_build_state(\n    _path: String,\n    _locale: String,\n) -&gt; RenderFnResultWithCause&lt;IndexPageState&gt; {\n    Ok(IndexPageState {\n        username: &quot;&quot;.to_string(),\n    })\n}\n\n</code></pre>\n<p>The only particularly unergonomic thing here is that we have to <code>.clone()</code> the <code>username</code> so that we can both <code>bind:value</code> to it and display it. Note that this will be made unnecessary with Sycamore's new reactive primitives (which will be released soon).</p>\n<h2>Accessing Another Page's State</h2>\n<p>Because every template that uses this pattern will have its state added to a special <em>page state store</em>, you can actually access the state of another page quite easily. However, you must be careful doing this, because the other page's state will only be available if it's been loaded by the user. On the server, every page is loaded in its own little silo to prevent corruption, so no other page will ever have been 'loaded'. As for in the browser, you might design an app in which it's only possible to get to a certain page by going through another, but you still can't assume that that page has been loaded, because <a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/freezing\">state freezing</a> can let a user pick up from any page in your app, and such special rendering flows will be shattered.</p>\n<p>All that said, you can access another page's state like so (see <a href=\"https://github.com/arctic-hen7/perseus/blob/main/examples/core/rx_state/src/templates/about.rs\">here</a>):</p>\n<pre><code class=\"language-rust\">use crate::templates::index::IndexPageStateRx;\nuse perseus::{get_render_ctx, Html, Template};\nuse sycamore::prelude::{view, Signal};\nuse sycamore::view::View;\n\n// WARNING: Accessing the page state store manually as this template does is NOT recommended, and is done for demonstration purposes only! In reality, you should use global state for anything that\n// you need to share between pages.\n\n#[perseus::template_rx]\npub fn about_page() -&gt; View&lt;G&gt; {\n    // Get the page state store manually\n    // The index page is just an empty string\n    let index_props_rx = get_render_ctx!()\n        .page_state_store\n        .get::&lt;IndexPageStateRx&gt;(&quot;&quot;);\n    // Get the state from the index page\n    // If the user hasn't visited there yet, this won't exist\n    let username = match index_props_rx {\n        Some(IndexPageStateRx { username }) =&gt; username,\n        None =&gt; Signal::new(&quot;&quot;.to_string()),\n    };\n\n    view! {\n        p { (format!(&quot;Greetings, {}!&quot;, username.get())) }\n\n        a(href = &quot;&quot;) { &quot;Index&quot; }\n    }\n}\n\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\n    Template::new(&quot;about&quot;).template(about_page)\n}\n\n</code></pre>\n</div></main></div></div></div></div><footer class=\"w-full flex justify-center py-5 bg-gray-100 dark:bg-navy-deep\" data-hk=\"3.28\"><p class=\"dark:text-white mx-5 text-center\" data-hk=\"3.29\"><span data-hk=\"3.30\">© <a href=\"https://github.com/arctic-hen7\" class=\"underline\">arctic-hen7</a> ⁨2021⁩, see license <a href=\"https://github.com/arctic-hen7/perseus/blob/main/LICENSE\" class=\"underline\">here</a>.</span></p></footer><script data-hk=\"2.1\" defer=\"\" src=\".perseus/static/prism.js\"></script><script data-hk=\"2.2\">window.Prism.highlightAll();</script>","state":"{\"title\":\"Reactive State\",\"content\":\"<h1>Reactive State</h1>\\n<p>In v0.3.4, Perseus added support for <em>reactive state</em>, which we talked about a bit in the tutorials at the beginning of the documentation. If you've come from a Perseus version before v0.3.4, this system will be quite new to you, as it adds a whole new platform on which templates can interact with their state. Originally, you could generate state, and then it would be done, and the template would receive it as is. Now, that state can be made <em>reactive</em> by wrapping all its fields inside <code>Signal</code>s, and it will then be added to a global store of page state. The platform this is built on allows a whole new level of state mechanics in Perseus, including <a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/global\\\">global state</a> and even <a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/hsr\\\">hot state reloading</a> (a world first to our knowledge)!</p>\\n<p>In essence, Perseus now provides a way to make your state automatically reactive, which enables some <em>really</em> cool new features!</p>\\n<p>To use this new platform, just annotate a state <code>struct</code> with <code>#[perseus::make_rx(RxName)]</code>, where <code>RxName</code> is the name of the new reactive <code>struct</code> (e.g. <code>IndexState</code> might become <code>IndexStateRx</code>). This macro wraps every single property in your <code>struct</code> in a <code>Signal</code> and produces a new reactive version that way, implementing <code>perseus::state::MakeRx</code> on the original to provide a method <code>.make_rx()</code> that can be used to convert from the unreactive version to the reactive one (there's also the reverse through <code>perseus::state::MakeUnrx</code>, which is implemented on the new, reactive version). If you have fields on your <code>struct</code> that are themselves <code>struct</code>s, you'll need to nest that reactivity, which you can do by adding <code>#[rx::nested(&quot;field&quot;, FieldRxName)]</code> just underneath the <code>#[make_rx(...)]</code> macro, providing it the name of the field and the type of the reactive version (which you'd generated with <code>#[make_rx(...)]</code>). Notably, <code>#[make_rx(...)]</code> automatically derives <code>Serialize</code>, <code>Deserialize</code>, and <code>Clone</code> on your <code>struct</code> (so don't derive them yourself!).</p>\\n<p><em>Note: Sycamore has a proposal to support fine-grained reactivity like this through observers, which will supersede this when they're released, and they'll make all this even faster! Right now, everything has to be cloned unfortunately.</em></p>\\n<p>Once you've got some reactive versions of your state <code>struct</code>s ready, you should generate the unreactive versions as usual in functions like <code>get_build_state()</code>, but then set the first argument on your template function to the reactive version (e.g. <code>IndexStateRx</code> rather than <code>IndexState</code>). This requires Perseus to convert between the unreactive and reactive versions in the background, which you can enable by changing the old <code>#[template(...)]</code> (used in the old documentation/tutorials) to <code>#[template_rx]</code> and removing the Sycamore <code>#[component]</code> annotation (this is added automatically by <code>#[template_rx]</code>). Behind the scenes, you've just enabled the world's most powerful state platform, and not only will your state be made reactive for you, it will be added to the <em>page state store</em>, a global store that enables Perseus to cache the state of a page. So, if your users start filling out forms on page 1 and then go to page 2, and then come back to page 1, their forms will be just how they left them. (Not sure about you, but it feels to us like it's about time this was the default on the web!)</p>\\n<p><em>Side note: if you think this behavior is horrific, you can still use the old `#[template(...)] macro, and we have no plans to deprecate it. Perseus' original unreactive state system worked very well, and there are still plenty of use cases where you may not want all this newfangled reactive state nonsense (like completely static blogs).</em></p>\\n<p>You may be wondering what the benefits of having a reactive state are. Well, the intention is this: every possible state your page can be in should be representable in your state. That means that, whenever you'd usually declare a new variable in a <code>Signal</code> to handle some state, you can move it into your template's state and handle it there instead, making things cleaner and taking advantage of Perseus' state caching system. If your entire app doesn't use any of this though, you can still trivially use the old state platform if you want to.</p>\\n<h2>Example</h2>\\n<p>This can all be a bit hard to imagine, so here's how it looks in practice with a simple state involving a <code>username</code> that the user can type in, and then it'll be displayed back to them. You can see the source <a href=\\\"https://github.com/arctic-hen7/perseus/blob/main/examples/core/rx_state/src/templates/index.rs\\\">here</a>.</p>\\n<pre><code class=\\\"language-rust\\\">use perseus::{Html, RenderFnResultWithCause, Template};\\nuse sycamore::prelude::{view, SsrNode, View};\\n\\n#[perseus::make_rx(IndexPageStateRx)]\\npub struct IndexPageState {\\n    pub username: String,\\n}\\n\\n// This macro will make our state reactive *and* store it in the page state store, which means it'll be the same even if we go to the about page and come back (as long as we're in the same session)\\n#[perseus::template_rx]\\npub fn index_page(state: IndexPageStateRx) -&gt; View&lt;G&gt; {\\n    let username = state.username;\\n    let username_2 = username.clone();\\n\\n    view! {\\n        p { (format!(&quot;Greetings, {}!&quot;, username.get())) }\\n        input(bind:value = username_2, placeholder = &quot;Username&quot;)\\n\\n        a(href = &quot;about&quot;, id = &quot;about-link&quot;) { &quot;About&quot; }\\n    }\\n}\\n\\n#[perseus::head]\\npub fn head() -&gt; View&lt;SsrNode&gt; {\\n    view! {\\n        title { &quot;Index Page&quot; }\\n    }\\n}\\n\\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\\n    Template::new(&quot;index&quot;)\\n        .template(index_page)\\n        .head(head)\\n        .build_state_fn(get_build_state)\\n}\\n\\n#[perseus::autoserde(build_state)]\\npub async fn get_build_state(\\n    _path: String,\\n    _locale: String,\\n) -&gt; RenderFnResultWithCause&lt;IndexPageState&gt; {\\n    Ok(IndexPageState {\\n        username: &quot;&quot;.to_string(),\\n    })\\n}\\n\\n</code></pre>\\n<p>The only particularly unergonomic thing here is that we have to <code>.clone()</code> the <code>username</code> so that we can both <code>bind:value</code> to it and display it. Note that this will be made unnecessary with Sycamore's new reactive primitives (which will be released soon).</p>\\n<h2>Accessing Another Page's State</h2>\\n<p>Because every template that uses this pattern will have its state added to a special <em>page state store</em>, you can actually access the state of another page quite easily. However, you must be careful doing this, because the other page's state will only be available if it's been loaded by the user. On the server, every page is loaded in its own little silo to prevent corruption, so no other page will ever have been 'loaded'. As for in the browser, you might design an app in which it's only possible to get to a certain page by going through another, but you still can't assume that that page has been loaded, because <a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/freezing\\\">state freezing</a> can let a user pick up from any page in your app, and such special rendering flows will be shattered.</p>\\n<p>All that said, you can access another page's state like so (see <a href=\\\"https://github.com/arctic-hen7/perseus/blob/main/examples/core/rx_state/src/templates/about.rs\\\">here</a>):</p>\\n<pre><code class=\\\"language-rust\\\">use crate::templates::index::IndexPageStateRx;\\nuse perseus::{get_render_ctx, Html, Template};\\nuse sycamore::prelude::{view, Signal};\\nuse sycamore::view::View;\\n\\n// WARNING: Accessing the page state store manually as this template does is NOT recommended, and is done for demonstration purposes only! In reality, you should use global state for anything that\\n// you need to share between pages.\\n\\n#[perseus::template_rx]\\npub fn about_page() -&gt; View&lt;G&gt; {\\n    // Get the page state store manually\\n    // The index page is just an empty string\\n    let index_props_rx = get_render_ctx!()\\n        .page_state_store\\n        .get::&lt;IndexPageStateRx&gt;(&quot;&quot;);\\n    // Get the state from the index page\\n    // If the user hasn't visited there yet, this won't exist\\n    let username = match index_props_rx {\\n        Some(IndexPageStateRx { username }) =&gt; username,\\n        None =&gt; Signal::new(&quot;&quot;.to_string()),\\n    };\\n\\n    view! {\\n        p { (format!(&quot;Greetings, {}!&quot;, username.get())) }\\n\\n        a(href = &quot;&quot;) { &quot;Index&quot; }\\n    }\\n}\\n\\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\\n    Template::new(&quot;about&quot;).template(about_page)\\n}\\n\\n</code></pre>\\n\",\"sidebar_content\":\"<h1>Introduction</h1>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/intro\\\">Introduction</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/what-is-perseus\\\">What is Perseus?</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/core-principles\\\">Core Principles</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/hello-world\\\">Hello World!</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/second-app\\\">Your Second App</a></li>\\n</ul>\\n<hr />\\n<h1>Reference</h1>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/perseus-app\\\"><code>PerseusApp</code></a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/define-app\\\"><code>define_app!</code></a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/views\\\">Writing Views</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/index-view\\\">The Index View</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/debugging\\\">Debugging</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/live-reloading\\\">Live Reloading</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/intro\\\">Templates and Routing</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/metadata-modification\\\">Modifying the <code>&lt;head&gt;</code></a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/setting-headers\\\">Modifying HTTP Headers</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/router-state\\\">Listening to the Router</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/error-pages\\\">Error Pages</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/static-content\\\">Static Content</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/intro\\\">Internationalization</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/defining\\\">Defining Translations</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/using\\\">Using Translations</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/translations-managers\\\">Translations Managers</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/other-engines\\\">Other Translation Engines</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/intro\\\">Rendering Strategies</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-state\\\">Build State</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-paths\\\">Build Paths</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/request-state\\\">Request State</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/revalidation\\\">Revalidation</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/incremental\\\">Incremental Generation</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/amalgamation\\\">State Amalgamation</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/hydration\\\">Hydration</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/rx\\\">Reactive State</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/global\\\">Global State</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/freezing\\\">State Freezing</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/idb-freezing\\\">Freezing to IndexedDB</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/hsr\\\">Hot State Reloading (HSR)</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/cli\\\">CLI</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/ejecting\\\">Ejecting</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/snooping\\\">Snooping</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/intro\\\">Testing</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/checkpoints\\\">Checkpoints</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/fantoccini-basics\\\">Fantoccini Basics</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/manual\\\">Manual Testing</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/styling\\\">Styling</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/server-communication\\\">Communicating with a Server</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/stores\\\">Stores</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/exporting\\\">Static Exporting</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/intro\\\">Plugins</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/functional\\\">Functional Actions</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/control\\\">Control Actions</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/using\\\">Using Plugins</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/tinker\\\">The <code>tinker</code> Action</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/writing\\\">Writing Plugins</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/security\\\">Security Considerations</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/publishing\\\">Publishing Plugins</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/engines\\\">Engines</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/intro\\\">Deploying</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverful\\\">Server Deployment</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverless\\\">Serverless Deployment</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/size\\\">Optimizing Code Size</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/relative-paths\\\">Relative Paths</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/docker\\\">Docker Deployment</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/updating\\\">Migrating from v0.3.3</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/pitfalls-and-bugs\\\">Common Pitfalls and Known Bugs</a></li>\\n</ul>\\n<hr />\\n<h1>Advanced</h1>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/intro\\\">Under the Hood</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/arch\\\">Architecture</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/initial-loads\\\">Initial Loads</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/subsequent-loads\\\">Subsequent Loads</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/routing\\\">Routing</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/route-announcer\\\">Route Announcer</a></li>\\n</ul>\\n<hr />\\n<h1>Further Tutorials</h1>\\n<ul>\\n<li><a href=\\\"docs/tutorials/auth\\\">Authentication</a></li>\\n</ul>\\n\",\"status\":\"Next\",\"manifest\":{\"stable\":\"0.3.4\",\"outdated\":[\"0.3.0-0.3.3\",\"0.2.x\",\"0.1.x\"],\"beta\":[],\"history_map\":{\"0.2.x\":\"v0.2.3\",\"0.3.0-0.3.3\":\"v0.3.3\",\"0.1.x\":\"v0.1.4\",\"0.3.4\":\"HEAD\"}},\"current_version\":\"next\"}","head":"<title data-hk=\"1.0\">Reactive State | Perseus Docs</title><link href=\".perseus/static/styles/markdown.css\" data-hk=\"1.1\" rel=\"stylesheet\"/><link href=\".perseus/static/styles/docs_links_markdown.css\" data-hk=\"1.2\" rel=\"stylesheet\"/><link data-hk=\"1.3\" rel=\"stylesheet\" href=\".perseus/static/prism.css\"/>"}