{"content":"<header data-hk=\"3.0\" class=\"shadow-md sm:p-2 w-full bg-white dark:text-white dark:bg-navy mb-20\"><div class=\"flex justify-between\" data-hk=\"3.1\"><a href=\"en-US/\" data-hk=\"3.2\" class=\"justify-self-start self-center m-3 ml-5 text-md sm:text-2xl\">Perseus</a><div class=\"md:hidden m-3 mr-5 tham tham-e-spin tham-w-6 \" data-hk=\"3.3\"><div data-hk=\"3.4\" class=\"tham-box\"><div data-hk=\"3.5\" class=\"dark:bg-white tham-inner\"></div></div></div><nav data-hk=\"3.6\" class=\"hidden md:flex\"><ul class=\"mr-5 flex\" data-hk=\"3.7\"><li data-hk=\"4.0\" class=\"m-3 p-1\"><a href=\"en-US/docs\" class=\"px-2\" data-hk=\"4.1\">Docs</a></li><li data-hk=\"4.2\" class=\"m-3 p-1\"><a data-hk=\"4.3\" href=\"en-US/comparisons\" class=\"px-2\">Comparisons</a></li><li class=\"m-3 p-1\" data-hk=\"4.4\"><a class=\"px-2\" data-hk=\"4.5\" href=\"en-US/plugins\">Plugins</a></li></ul></nav></div><nav data-hk=\"3.8\" id=\"mobile_nav_menu\" class=\"md:hidden w-full text-center justify-center overflow-y-scroll hidden\"><div class=\"mr-5 overflow-y-scroll\" style=\"max-height: 500px\" data-hk=\"3.9\"><ul data-hk=\"3.10\"><li class=\"m-3 p-1\" data-hk=\"5.0\"><a class=\"px-2\" data-hk=\"5.1\" href=\"en-US/docs\">Docs</a></li><li data-hk=\"5.2\" class=\"m-3 p-1\"><a class=\"px-2\" data-hk=\"5.3\" href=\"en-US/comparisons\">Comparisons</a></li><li data-hk=\"5.4\" class=\"m-3 p-1\"><a href=\"en-US/plugins\" class=\"px-2\" data-hk=\"5.5\">Plugins</a></li></ul><hr data-hk=\"3.11\"/><div data-hk=\"3.12\" class=\"text-left p-3\"><!--#--><!----><select class=\"p-2 rounded-md text-white bg-indigo-500\" data-hk=\"6.0\"><option selected=\"\" data-hk=\"6.1\" value=\"next\">Next (unreleased)</option><!--#--><option value=\"0.4.x\" data-hk=\"6.2\">v⁨0.4.x⁩ (beta)</option><!--/--><option value=\"0.3.4\" data-hk=\"6.3\">v⁨0.3.4⁩ (stable)</option><!--#--><option data-hk=\"6.4\" value=\"0.3.0-0.3.3\">v⁨0.3.0-0.3.3⁩ (outdated)</option><option value=\"0.2.x\" data-hk=\"6.5\">v⁨0.2.x⁩ (outdated)</option><option data-hk=\"6.6\" value=\"0.1.x\">v⁨0.1.x⁩ (outdated)</option><!--/--></select><!--/--><div class=\"docs-links-markdown\" data-hk=\"3.13\"><h1>Introduction</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/intro\">Introduction</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/what-is-perseus\">What is Perseus?</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/core-principles\">Core Principles</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/hello-world\">Hello World!</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/second-app\">Your Second App</a></li>\n</ul>\n<hr />\n<h1>Reference</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/perseus-app\"><code>PerseusApp</code></a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/define-app\"><code>define_app!</code></a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/views\">Writing Views</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/index-view\">The Index View</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/debugging\">Debugging</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/live-reloading\">Live Reloading</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/intro\">Templates and Routing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/metadata-modification\">Modifying the <code>&lt;head&gt;</code></a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/setting-headers\">Modifying HTTP Headers</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/router-state\">Listening to the Router</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/error-pages\">Error Pages</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/static-content\">Static Content</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/intro\">Internationalization</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/defining\">Defining Translations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/using\">Using Translations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/translations-managers\">Translations Managers</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/other-engines\">Other Translation Engines</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/intro\">Rendering Strategies</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-state\">Build State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-paths\">Build Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/request-state\">Request State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/revalidation\">Revalidation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/incremental\">Incremental Generation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/amalgamation\">State Amalgamation</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/hydration\">Hydration</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/rx\">Reactive State</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/global\">Global State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/freezing\">State Freezing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/idb-freezing\">Freezing to IndexedDB</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/hsr\">Hot State Reloading (HSR)</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/cli\">CLI</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/ejecting\">Ejecting</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/snooping\">Snooping</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/intro\">Testing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/checkpoints\">Checkpoints</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/fantoccini-basics\">Fantoccini Basics</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/manual\">Manual Testing</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/styling\">Styling</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/server-communication\">Communicating with a Server</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/stores\">Stores</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/exporting\">Static Exporting</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/intro\">Plugins</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/functional\">Functional Actions</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/control\">Control Actions</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/using\">Using Plugins</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/tinker\">The <code>tinker</code> Action</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/writing\">Writing Plugins</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/security\">Security Considerations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/publishing\">Publishing Plugins</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/engines\">Engines</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/intro\">Deploying</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverful\">Server Deployment</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverless\">Serverless Deployment</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/size\">Optimizing Code Size</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/relative-paths\">Relative Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/docker\">Docker Deployment</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/updating\">Migrating from v0.3.x</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/pitfalls-and-bugs\">Common Pitfalls and Known Bugs</a></li>\n</ul>\n<hr />\n<h1>Advanced</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/intro\">Under the Hood</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/arch\">Architecture</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/initial-loads\">Initial Loads</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/subsequent-loads\">Subsequent Loads</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/routing\">Routing</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/route-announcer\">Route Announcer</a></li>\n</ul>\n<hr />\n<h1>Further Tutorials</h1>\n<ul>\n<li><a href=\"docs/tutorials/auth\">Authentication</a></li>\n</ul>\n</div></div></div></nav></header><div class=\"mt-14 xs:mt-16 sm:mt-20 lg:mt-25 overflow-y-auto flex\" data-hk=\"3.14\"><div data-hk=\"3.15\" class=\"flex w-full\"><div class=\"h-full hidden md:block max-w-xs w-full border-r\" data-hk=\"3.16\"><div data-hk=\"3.17\" class=\"mr-5\"><div data-hk=\"3.18\" class=\"text-left text-black dark:text-white p-3\"><aside data-hk=\"3.19\"><!--#--><!----><select data-hk=\"7.0\" class=\"p-2 rounded-md text-white bg-indigo-500\"><option value=\"next\" selected=\"\" data-hk=\"7.1\">Next (unreleased)</option><!--#--><option data-hk=\"7.2\" value=\"0.4.x\">v⁨0.4.x⁩ (beta)</option><!--/--><option data-hk=\"7.3\" value=\"0.3.4\">v⁨0.3.4⁩ (stable)</option><!--#--><option value=\"0.3.0-0.3.3\" data-hk=\"7.4\">v⁨0.3.0-0.3.3⁩ (outdated)</option><option value=\"0.2.x\" data-hk=\"7.5\">v⁨0.2.x⁩ (outdated)</option><option data-hk=\"7.6\" value=\"0.1.x\">v⁨0.1.x⁩ (outdated)</option><!--/--></select><!--/--><div data-hk=\"3.20\" class=\"docs-links-markdown\"><h1>Introduction</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/intro\">Introduction</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/what-is-perseus\">What is Perseus?</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/core-principles\">Core Principles</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/hello-world\">Hello World!</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/second-app\">Your Second App</a></li>\n</ul>\n<hr />\n<h1>Reference</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/perseus-app\"><code>PerseusApp</code></a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/define-app\"><code>define_app!</code></a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/views\">Writing Views</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/index-view\">The Index View</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/debugging\">Debugging</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/live-reloading\">Live Reloading</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/intro\">Templates and Routing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/metadata-modification\">Modifying the <code>&lt;head&gt;</code></a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/setting-headers\">Modifying HTTP Headers</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/router-state\">Listening to the Router</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/error-pages\">Error Pages</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/static-content\">Static Content</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/intro\">Internationalization</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/defining\">Defining Translations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/using\">Using Translations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/translations-managers\">Translations Managers</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/other-engines\">Other Translation Engines</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/intro\">Rendering Strategies</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-state\">Build State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-paths\">Build Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/request-state\">Request State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/revalidation\">Revalidation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/incremental\">Incremental Generation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/amalgamation\">State Amalgamation</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/hydration\">Hydration</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/rx\">Reactive State</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/global\">Global State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/freezing\">State Freezing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/idb-freezing\">Freezing to IndexedDB</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/hsr\">Hot State Reloading (HSR)</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/cli\">CLI</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/ejecting\">Ejecting</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/snooping\">Snooping</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/intro\">Testing</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/checkpoints\">Checkpoints</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/fantoccini-basics\">Fantoccini Basics</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/manual\">Manual Testing</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/styling\">Styling</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/server-communication\">Communicating with a Server</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/stores\">Stores</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/exporting\">Static Exporting</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/intro\">Plugins</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/functional\">Functional Actions</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/control\">Control Actions</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/using\">Using Plugins</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/tinker\">The <code>tinker</code> Action</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/writing\">Writing Plugins</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/security\">Security Considerations</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/publishing\">Publishing Plugins</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/engines\">Engines</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/intro\">Deploying</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverful\">Server Deployment</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverless\">Serverless Deployment</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/size\">Optimizing Code Size</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/relative-paths\">Relative Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/docker\">Docker Deployment</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/updating\">Migrating from v0.3.x</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/pitfalls-and-bugs\">Common Pitfalls and Known Bugs</a></li>\n</ul>\n<hr />\n<h1>Advanced</h1>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/intro\">Under the Hood</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/arch\">Architecture</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/initial-loads\">Initial Loads</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/subsequent-loads\">Subsequent Loads</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/routing\">Routing</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/route-announcer\">Route Announcer</a></li>\n</ul>\n<hr />\n<h1>Further Tutorials</h1>\n<ul>\n<li><a href=\"docs/tutorials/auth\">Authentication</a></li>\n</ul>\n</div></aside></div></div></div><div class=\"h-full flex w-full\" data-hk=\"3.21\"><div class=\"px-3 w-full sm:mr-auto sm:ml-auto sm:max-w-prose lg:max-w-3xl xl:max-w-4xl 2xl:max-w-5xl\" data-hk=\"3.22\"><!--#--><div class=\"ring-4 ring-orange-400 p-4 rounded-lg mt-1\" data-hk=\"3.23\"><div class=\"flex flex-col 2xs:flex-row dark:text-white\" data-hk=\"3.24\"><span data-hk=\"3.25\" class=\"self-center mr-2\" style=\"fill: #fb923c;\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"auto\" viewBox=\"0 0 24 24\" width=\"2.25rem\" fill=\"\\#000000\"><path d=\"M12 7c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1zm-.01-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-3h-2v-2h2v2z\"/></svg></span><p data-hk=\"3.26\">This version of the documentation is for a version that has not yet been released, and features documented here may not be present in the latest release. You can see the latest stable version of the docs <a href=\"en-US/docs/0.3.x/intro\" class=\"underline\">here</a>.</p></div></div><!--/--><main class=\"text-black dark:text-white\" data-hk=\"3.27\"><div class=\"markdown\" data-hk=\"2.0\"><h1>Build State</h1>\n<p>The most commonly-used rendering strategy for Perseus is static generation, which renders your pages to static HTML files. These can then be served by the server with almost no additional processing, which makes for an extremely fast experience!</p>\n<p>Note that, depending on other strategies used, Perseus may call this strategy at build-time or while the server is running, so you shouldn't depend on anything only present in a build environment (particularly if you're using the <em>incremental generation</em> or <em>revalidation</em> strategies).</p>\n<p><em>Note: if you want to export your app to purely static files, see <a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/exporting\">this section</a>, which will help you use Perseus without any server.</em></p>\n<h2>Usage</h2>\n<h3>Without <em>Build Paths</em> or <em>Incremental Generation</em></h3>\n<p>On its own, this strategy will simply generate properties for your template to turn it into a page, which would be perfect for something like a list of blog posts (just fetch the list from the filesystem, a database, etc.). Here's an example from <a href=\"https://github.com/arctic-hen7/perseus/blob/main/examples/core/state_generation/src/templates/build_state.rs\">here</a> for a simple greeting:</p>\n<pre><code class=\"language-rust\">use perseus::{RenderFnResultWithCause, Template};\nuse sycamore::prelude::{view, Html, Scope, View};\n\n#[perseus::make_rx(PageStateRx)]\npub struct PageState {\n    pub greeting: String,\n}\n\n#[perseus::template_rx]\npub fn build_state_page&lt;'a, G: Html&gt;(cx: Scope&lt;'a&gt;, state: PageStateRx&lt;'a&gt;) -&gt; View&lt;G&gt; {\n    view! { cx,\n        p { (state.greeting.get()) }\n    }\n}\n\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\n    Template::new(&quot;build_state&quot;)\n        .build_state_fn(get_build_state)\n        .template(build_state_page)\n}\n\n// We're told the path we're generating for (useless unless we're using build paths as well) and the locale (which will be `xx-XX` if we're not using i18n)\n// Note that this function is asynchronous, so we can do work like fetching from a server or the like here (see the `demo/fetching` example)\n#[perseus::autoserde(build_state)]\npub async fn get_build_state(_path: String, _locale: String) -&gt; RenderFnResultWithCause&lt;PageState&gt; {\n    Ok(PageState {\n        greeting: &quot;Hello World!&quot;.to_string(),\n    })\n}\n\n</code></pre>\n<p>Note that Perseus passes around properties to pages as <code>String</code>s, so the function used for this strategy is expected to return a string, but this serialization is done for you with the <code>#[perseus::autoserde(build_state)]</code> macro. Note also the return type <code>RenderFnResultWithCause</code>, a Perseus type that represents the possibility of returning almost any kind of error, with an attached cause declaration that blames either the client or the server for the error. Most of the time, the server will be at fault (e.g. if serializing some obvious properties fails), and this is the default if you use <code>?</code> or <code>.into()</code> on another error type to run an automatic conversion. However, if you want to explicitly state a different cause (or provide a different HTTP status code), you can construct <code>GenericErrorWithCause</code> or use the more convenient <code>blame_err!</code> macro, as done in the below example (under the next subheading) if the path is <code>post/tests</code>. We set the error (a <code>Box&lt;dyn std::error::Error&gt;</code>) and then set the cause to be the client (they navigated to an illegal page) and tell the server to return a 404, which means our app will display something like <em>Page not found</em>.</p>\n<h3>With <em>Build Paths</em> or <em>Incremental Generation</em></h3>\n<p>You may have noticed in the above example that the build state function takes a <code>path</code> parameter. This becomes useful once you bring the <em>build paths</em> or <em>incremental generation</em> strategies into play, which allow you to render many paths for a single template. In the following example (taken from <a href=\"https://github.com/arctic-hen7/perseus/blob/main/examples/core/state_generation/src/templates/incremental_generation.rs\">here</a>), all three strategies are used together to pre-render some blog posts at build-time, and allow the rest to be requested and rendered if they exist (here, any post will exist except one called <code>tests</code>):</p>\n<pre><code class=\"language-rust\">// This is exactly the same as the build paths example except for a few lines and some names\n\nuse perseus::{blame_err, RenderFnResult, RenderFnResultWithCause, Template};\nuse sycamore::prelude::{view, Html, Scope, View};\n\n#[perseus::make_rx(PageStateRx)]\npub struct PageState {\n    title: String,\n    content: String,\n}\n\n#[perseus::template_rx]\npub fn incremental_generation_page&lt;'a, G: Html&gt;(cx: Scope&lt;'a&gt;, state: PageStateRx&lt;'a&gt;) -&gt; View&lt;G&gt; {\n    let title = state.title;\n    let content = state.content;\n    view! { cx,\n        h1 {\n            (title.get())\n        }\n        p {\n            (content.get())\n        }\n    }\n}\n\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\n    Template::new(&quot;incremental_generation&quot;)\n        .build_paths_fn(get_build_paths)\n        .build_state_fn(get_build_state)\n        // This line makes Perseus try to render any given path under the template's root path (`incremental_generation`) by putting it through `get_build_state`\n        // If you want to filter the path because some are invalid (e.g. entries that aren't in some database), we can filter them out at the state of the build state function\n        .incremental_generation()\n        .template(incremental_generation_page)\n}\n\n// We'll take in the path here, which will consist of the template name `incremental_generation` followed by the spcific path we're building for (as exported from `get_build_paths`)\n#[perseus::autoserde(build_state)]\npub async fn get_build_state(path: String, _locale: String) -&gt; RenderFnResultWithCause&lt;PageState&gt; {\n    // This path is illegal, and can't be rendered\n    // Because we're using incremental generation, we could gte literally anything as the `path`\n    if path == &quot;incremental_generation/tests&quot; {\n        // This tells Perseus to return an error that's the client's fault, with the HTTP status code 404 (not found) and the message 'illegal page'\n        // You could return this error manually, but this is more convenient\n        blame_err!(client, 404, &quot;illegal page&quot;);\n    }\n    let title = path.clone();\n    let content = format!(\n        &quot;This is a post entitled '{}'. Its original slug was '{}'.&quot;,\n        &amp;title, &amp;path\n    );\n\n    Ok(PageState { title, content })\n}\n\n// This just returns a vector of all the paths we want to generate for underneath `incremental_generation` (the template's name and root path)\n// Like for build state, this function is asynchronous, so you could fetch these paths from a database or the like\n// Note that everything you export from here will be prefixed with `&lt;template-name&gt;/` when it becomes a URL in your app\n//\n// Note also that there's almost no point in using build paths without build state, as every page would come out exactly the same (unless you differentiated them on the client...)\npub async fn get_build_paths() -&gt; RenderFnResult&lt;Vec&lt;String&gt;&gt; {\n    Ok(vec![&quot;test&quot;.to_string(), &quot;blah/test/blah&quot;.to_string()])\n}\n\n</code></pre>\n<p>When either of these additional strategies are used, <em>build state</em> will be passed the path of the page to be rendered, which allows it to prepare unique properties for that page. In the above example, it just turns the URL into a title and renders that.</p>\n<p>For further details on <em>build paths</em> and <em>incremental generation</em>, see the following sections.</p>\n<h2>Common Pitfalls</h2>\n<p>When a user goes to your app from another website, Perseus will send all the data they need down straight away (in the <a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/initial-loads\">initial loads</a> system), which involves setting any state you provide in a JavaScript global variable so that the browser can access it without needing to talk to the server again (which would slow things down). Unfortunately, JavaScript's concept of 'raw strings' (in which you don't need to escape anything) is quite a bit looser than Rust's, and so Perseus internally escapes any instances of backticks or <code>${</code> (JS interpolation syntax). This should all work fine, but, when your state is deserialized, it's not considered acceptable for it to contain <em>control characters</em>. In other words, anything like <code>\\n</code>, <code>\\t</code> or the like that have special meanings in strings must be escaped before being sent through Perseus! Note that this is a requirement imposed by the lower-level module <a href=\"https://github.com/serde-rs/json\"><code>serde_json</code></a>, not Perseus itself.</p>\n</div></main></div></div></div></div><footer class=\"w-full flex justify-center py-5 bg-gray-100 dark:bg-navy-deep\" data-hk=\"3.28\"><p class=\"dark:text-white mx-5 text-center\" data-hk=\"3.29\"><span data-hk=\"3.30\">© <a href=\"https://github.com/arctic-hen7\" class=\"underline\">arctic-hen7</a> ⁨2021⁩, see license <a href=\"https://github.com/arctic-hen7/perseus/blob/main/LICENSE\" class=\"underline\">here</a>.</span></p></footer><script src=\".perseus/static/prism.js\" defer=\"\" data-hk=\"2.1\"></script><script data-hk=\"2.2\">window.Prism.highlightAll();</script>","state":"{\"title\":\"Build State\",\"content\":\"<h1>Build State</h1>\\n<p>The most commonly-used rendering strategy for Perseus is static generation, which renders your pages to static HTML files. These can then be served by the server with almost no additional processing, which makes for an extremely fast experience!</p>\\n<p>Note that, depending on other strategies used, Perseus may call this strategy at build-time or while the server is running, so you shouldn't depend on anything only present in a build environment (particularly if you're using the <em>incremental generation</em> or <em>revalidation</em> strategies).</p>\\n<p><em>Note: if you want to export your app to purely static files, see <a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/exporting\\\">this section</a>, which will help you use Perseus without any server.</em></p>\\n<h2>Usage</h2>\\n<h3>Without <em>Build Paths</em> or <em>Incremental Generation</em></h3>\\n<p>On its own, this strategy will simply generate properties for your template to turn it into a page, which would be perfect for something like a list of blog posts (just fetch the list from the filesystem, a database, etc.). Here's an example from <a href=\\\"https://github.com/arctic-hen7/perseus/blob/main/examples/core/state_generation/src/templates/build_state.rs\\\">here</a> for a simple greeting:</p>\\n<pre><code class=\\\"language-rust\\\">use perseus::{RenderFnResultWithCause, Template};\\nuse sycamore::prelude::{view, Html, Scope, View};\\n\\n#[perseus::make_rx(PageStateRx)]\\npub struct PageState {\\n    pub greeting: String,\\n}\\n\\n#[perseus::template_rx]\\npub fn build_state_page&lt;'a, G: Html&gt;(cx: Scope&lt;'a&gt;, state: PageStateRx&lt;'a&gt;) -&gt; View&lt;G&gt; {\\n    view! { cx,\\n        p { (state.greeting.get()) }\\n    }\\n}\\n\\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\\n    Template::new(&quot;build_state&quot;)\\n        .build_state_fn(get_build_state)\\n        .template(build_state_page)\\n}\\n\\n// We're told the path we're generating for (useless unless we're using build paths as well) and the locale (which will be `xx-XX` if we're not using i18n)\\n// Note that this function is asynchronous, so we can do work like fetching from a server or the like here (see the `demo/fetching` example)\\n#[perseus::autoserde(build_state)]\\npub async fn get_build_state(_path: String, _locale: String) -&gt; RenderFnResultWithCause&lt;PageState&gt; {\\n    Ok(PageState {\\n        greeting: &quot;Hello World!&quot;.to_string(),\\n    })\\n}\\n\\n</code></pre>\\n<p>Note that Perseus passes around properties to pages as <code>String</code>s, so the function used for this strategy is expected to return a string, but this serialization is done for you with the <code>#[perseus::autoserde(build_state)]</code> macro. Note also the return type <code>RenderFnResultWithCause</code>, a Perseus type that represents the possibility of returning almost any kind of error, with an attached cause declaration that blames either the client or the server for the error. Most of the time, the server will be at fault (e.g. if serializing some obvious properties fails), and this is the default if you use <code>?</code> or <code>.into()</code> on another error type to run an automatic conversion. However, if you want to explicitly state a different cause (or provide a different HTTP status code), you can construct <code>GenericErrorWithCause</code> or use the more convenient <code>blame_err!</code> macro, as done in the below example (under the next subheading) if the path is <code>post/tests</code>. We set the error (a <code>Box&lt;dyn std::error::Error&gt;</code>) and then set the cause to be the client (they navigated to an illegal page) and tell the server to return a 404, which means our app will display something like <em>Page not found</em>.</p>\\n<h3>With <em>Build Paths</em> or <em>Incremental Generation</em></h3>\\n<p>You may have noticed in the above example that the build state function takes a <code>path</code> parameter. This becomes useful once you bring the <em>build paths</em> or <em>incremental generation</em> strategies into play, which allow you to render many paths for a single template. In the following example (taken from <a href=\\\"https://github.com/arctic-hen7/perseus/blob/main/examples/core/state_generation/src/templates/incremental_generation.rs\\\">here</a>), all three strategies are used together to pre-render some blog posts at build-time, and allow the rest to be requested and rendered if they exist (here, any post will exist except one called <code>tests</code>):</p>\\n<pre><code class=\\\"language-rust\\\">// This is exactly the same as the build paths example except for a few lines and some names\\n\\nuse perseus::{blame_err, RenderFnResult, RenderFnResultWithCause, Template};\\nuse sycamore::prelude::{view, Html, Scope, View};\\n\\n#[perseus::make_rx(PageStateRx)]\\npub struct PageState {\\n    title: String,\\n    content: String,\\n}\\n\\n#[perseus::template_rx]\\npub fn incremental_generation_page&lt;'a, G: Html&gt;(cx: Scope&lt;'a&gt;, state: PageStateRx&lt;'a&gt;) -&gt; View&lt;G&gt; {\\n    let title = state.title;\\n    let content = state.content;\\n    view! { cx,\\n        h1 {\\n            (title.get())\\n        }\\n        p {\\n            (content.get())\\n        }\\n    }\\n}\\n\\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\\n    Template::new(&quot;incremental_generation&quot;)\\n        .build_paths_fn(get_build_paths)\\n        .build_state_fn(get_build_state)\\n        // This line makes Perseus try to render any given path under the template's root path (`incremental_generation`) by putting it through `get_build_state`\\n        // If you want to filter the path because some are invalid (e.g. entries that aren't in some database), we can filter them out at the state of the build state function\\n        .incremental_generation()\\n        .template(incremental_generation_page)\\n}\\n\\n// We'll take in the path here, which will consist of the template name `incremental_generation` followed by the spcific path we're building for (as exported from `get_build_paths`)\\n#[perseus::autoserde(build_state)]\\npub async fn get_build_state(path: String, _locale: String) -&gt; RenderFnResultWithCause&lt;PageState&gt; {\\n    // This path is illegal, and can't be rendered\\n    // Because we're using incremental generation, we could gte literally anything as the `path`\\n    if path == &quot;incremental_generation/tests&quot; {\\n        // This tells Perseus to return an error that's the client's fault, with the HTTP status code 404 (not found) and the message 'illegal page'\\n        // You could return this error manually, but this is more convenient\\n        blame_err!(client, 404, &quot;illegal page&quot;);\\n    }\\n    let title = path.clone();\\n    let content = format!(\\n        &quot;This is a post entitled '{}'. Its original slug was '{}'.&quot;,\\n        &amp;title, &amp;path\\n    );\\n\\n    Ok(PageState { title, content })\\n}\\n\\n// This just returns a vector of all the paths we want to generate for underneath `incremental_generation` (the template's name and root path)\\n// Like for build state, this function is asynchronous, so you could fetch these paths from a database or the like\\n// Note that everything you export from here will be prefixed with `&lt;template-name&gt;/` when it becomes a URL in your app\\n//\\n// Note also that there's almost no point in using build paths without build state, as every page would come out exactly the same (unless you differentiated them on the client...)\\npub async fn get_build_paths() -&gt; RenderFnResult&lt;Vec&lt;String&gt;&gt; {\\n    Ok(vec![&quot;test&quot;.to_string(), &quot;blah/test/blah&quot;.to_string()])\\n}\\n\\n</code></pre>\\n<p>When either of these additional strategies are used, <em>build state</em> will be passed the path of the page to be rendered, which allows it to prepare unique properties for that page. In the above example, it just turns the URL into a title and renders that.</p>\\n<p>For further details on <em>build paths</em> and <em>incremental generation</em>, see the following sections.</p>\\n<h2>Common Pitfalls</h2>\\n<p>When a user goes to your app from another website, Perseus will send all the data they need down straight away (in the <a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/initial-loads\\\">initial loads</a> system), which involves setting any state you provide in a JavaScript global variable so that the browser can access it without needing to talk to the server again (which would slow things down). Unfortunately, JavaScript's concept of 'raw strings' (in which you don't need to escape anything) is quite a bit looser than Rust's, and so Perseus internally escapes any instances of backticks or <code>${</code> (JS interpolation syntax). This should all work fine, but, when your state is deserialized, it's not considered acceptable for it to contain <em>control characters</em>. In other words, anything like <code>\\\\n</code>, <code>\\\\t</code> or the like that have special meanings in strings must be escaped before being sent through Perseus! Note that this is a requirement imposed by the lower-level module <a href=\\\"https://github.com/serde-rs/json\\\"><code>serde_json</code></a>, not Perseus itself.</p>\\n\",\"sidebar_content\":\"<h1>Introduction</h1>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/intro\\\">Introduction</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/what-is-perseus\\\">What is Perseus?</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/core-principles\\\">Core Principles</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/hello-world\\\">Hello World!</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/tutorials/second-app\\\">Your Second App</a></li>\\n</ul>\\n<hr />\\n<h1>Reference</h1>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/perseus-app\\\"><code>PerseusApp</code></a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/define-app\\\"><code>define_app!</code></a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/views\\\">Writing Views</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/index-view\\\">The Index View</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/debugging\\\">Debugging</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/live-reloading\\\">Live Reloading</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/intro\\\">Templates and Routing</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/metadata-modification\\\">Modifying the <code>&lt;head&gt;</code></a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/setting-headers\\\">Modifying HTTP Headers</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/templates/router-state\\\">Listening to the Router</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/error-pages\\\">Error Pages</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/static-content\\\">Static Content</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/intro\\\">Internationalization</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/defining\\\">Defining Translations</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/using\\\">Using Translations</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/translations-managers\\\">Translations Managers</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/i18n/other-engines\\\">Other Translation Engines</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/intro\\\">Rendering Strategies</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-state\\\">Build State</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/build-paths\\\">Build Paths</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/request-state\\\">Request State</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/revalidation\\\">Revalidation</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/incremental\\\">Incremental Generation</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/strategies/amalgamation\\\">State Amalgamation</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/hydration\\\">Hydration</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/rx\\\">Reactive State</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/global\\\">Global State</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/freezing\\\">State Freezing</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/idb-freezing\\\">Freezing to IndexedDB</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/state/hsr\\\">Hot State Reloading (HSR)</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/cli\\\">CLI</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/ejecting\\\">Ejecting</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/snooping\\\">Snooping</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/intro\\\">Testing</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/checkpoints\\\">Checkpoints</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/fantoccini-basics\\\">Fantoccini Basics</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/testing/manual\\\">Manual Testing</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/styling\\\">Styling</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/server-communication\\\">Communicating with a Server</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/stores\\\">Stores</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/exporting\\\">Static Exporting</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/intro\\\">Plugins</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/functional\\\">Functional Actions</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/control\\\">Control Actions</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/using\\\">Using Plugins</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/tinker\\\">The <code>tinker</code> Action</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/writing\\\">Writing Plugins</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/security\\\">Security Considerations</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/plugins/publishing\\\">Publishing Plugins</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/engines\\\">Engines</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/intro\\\">Deploying</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverful\\\">Server Deployment</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/serverless\\\">Serverless Deployment</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/size\\\">Optimizing Code Size</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/relative-paths\\\">Relative Paths</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/deploying/docker\\\">Docker Deployment</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/updating\\\">Migrating from v0.3.x</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/reference/pitfalls-and-bugs\\\">Common Pitfalls and Known Bugs</a></li>\\n</ul>\\n<hr />\\n<h1>Advanced</h1>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/intro\\\">Under the Hood</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/arch\\\">Architecture</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/initial-loads\\\">Initial Loads</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/subsequent-loads\\\">Subsequent Loads</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/routing\\\">Routing</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/next/advanced/route-announcer\\\">Route Announcer</a></li>\\n</ul>\\n<hr />\\n<h1>Further Tutorials</h1>\\n<ul>\\n<li><a href=\\\"docs/tutorials/auth\\\">Authentication</a></li>\\n</ul>\\n\",\"status\":\"Next\",\"manifest\":{\"stable\":\"0.3.4\",\"outdated\":[\"0.3.0-0.3.3\",\"0.2.x\",\"0.1.x\"],\"beta\":[\"0.4.x\"],\"history_map\":{\"0.1.x\":\"v0.1.4\",\"0.3.0-0.3.3\":\"v0.3.3\",\"0.3.4\":\"eccf137032fbe8e6507be9e9317edc16e7576a4f\",\"0.2.x\":\"v0.2.3\",\"0.4.x\":\"HEAD\"}},\"current_version\":\"next\"}","head":"<title data-hk=\"1.0\">Build State | Perseus Docs</title><link data-hk=\"1.1\" rel=\"stylesheet\" href=\".perseus/static/styles/markdown.css\"/><link data-hk=\"1.2\" href=\".perseus/static/styles/docs_links_markdown.css\" rel=\"stylesheet\"/><link data-hk=\"1.3\" href=\".perseus/static/prism.css\" rel=\"stylesheet\"/>"}