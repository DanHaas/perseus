{"content":"<header data-hk=\"3.0\" class=\"shadow-md sm:p-2 w-full bg-white dark:text-white dark:bg-navy mb-20\"><div class=\"flex justify-between\" data-hk=\"3.1\"><a class=\"justify-self-start self-center m-3 ml-5 text-md sm:text-2xl\" data-hk=\"3.2\" href=\"en-US/\">Perseus</a><div data-hk=\"3.3\" class=\"md:hidden m-3 mr-5 tham tham-e-spin tham-w-6 \"><div data-hk=\"3.4\" class=\"tham-box\"><div data-hk=\"3.5\" class=\"dark:bg-white tham-inner\"></div></div></div><nav class=\"hidden md:flex\" data-hk=\"3.6\"><ul data-hk=\"3.7\" class=\"mr-5 flex\"><li data-hk=\"4.0\" class=\"m-3 p-1\"><a class=\"px-2\" data-hk=\"4.1\" href=\"en-US/docs\">Docs</a></li><li data-hk=\"4.2\" class=\"m-3 p-1\"><a href=\"en-US/comparisons\" class=\"px-2\" data-hk=\"4.3\">Comparisons</a></li><li data-hk=\"4.4\" class=\"m-3 p-1\"><a data-hk=\"4.5\" href=\"en-US/plugins\" class=\"px-2\">Plugins</a></li></ul></nav></div><nav class=\"md:hidden w-full text-center justify-center overflow-y-scroll hidden\" id=\"mobile_nav_menu\" data-hk=\"3.8\"><div style=\"max-height: 500px\" data-hk=\"3.9\" class=\"mr-5 overflow-y-scroll\"><ul data-hk=\"3.10\"><li class=\"m-3 p-1\" data-hk=\"5.0\"><a class=\"px-2\" href=\"en-US/docs\" data-hk=\"5.1\">Docs</a></li><li class=\"m-3 p-1\" data-hk=\"5.2\"><a href=\"en-US/comparisons\" data-hk=\"5.3\" class=\"px-2\">Comparisons</a></li><li data-hk=\"5.4\" class=\"m-3 p-1\"><a class=\"px-2\" data-hk=\"5.5\" href=\"en-US/plugins\">Plugins</a></li></ul><hr data-hk=\"3.11\"/><div data-hk=\"3.12\" class=\"text-left p-3\"><!--#--><!----><select data-hk=\"6.0\" class=\"p-2 rounded-md text-white bg-indigo-500\"><option value=\"next\" data-hk=\"6.1\">Next (unreleased)</option><!--#--><!--/--><option value=\"0.3.x\" data-hk=\"6.2\">v⁨0.3.x⁩ (stable)</option><!--#--><option value=\"0.2.x\" data-hk=\"6.3\">v⁨0.2.x⁩ (outdated)</option><option selected=\"\" data-hk=\"6.4\" value=\"0.1.x\">v⁨0.1.x⁩ (outdated)</option><!--/--></select><!--/--><div data-hk=\"3.13\" class=\"docs-links-markdown\"><ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/intro\">Introduction</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/setup\">Setup</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/arch\">Architecture</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/intro\">Building Your First App</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/setup\">Installation and Setup</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/template\">Writing Your First Template</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/app\">Setting up the App Itself</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/cli\">CLI</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/templates\">Templates</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/routing\">Routing</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/error_pages\">Error Pages</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/intro\">Rendering Strategies</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_paths\">Build Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_state\">Build State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/request_state\">Request State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/revalidation\">Revalidation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/incremental\">Incremental generation</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/building\">Building</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/serving\">Serving</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/integrations/actix-web\">Actix Web Integration</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/config_managers\">Config Managers</a></li>\n</ul>\n</div></div></div></nav></header><div data-hk=\"3.14\" class=\"mt-14 xs:mt-16 sm:mt-20 lg:mt-25 overflow-y-auto flex\"><div data-hk=\"3.15\" class=\"flex w-full\"><div data-hk=\"3.16\" class=\"h-full hidden md:block max-w-xs w-full border-r\"><div data-hk=\"3.17\" class=\"mr-5\"><div data-hk=\"3.18\" class=\"text-left text-black dark:text-white p-3\"><aside data-hk=\"3.19\"><!--#--><!----><select data-hk=\"7.0\" class=\"p-2 rounded-md text-white bg-indigo-500\"><option value=\"next\" data-hk=\"7.1\">Next (unreleased)</option><!--#--><!--/--><option data-hk=\"7.2\" value=\"0.3.x\">v⁨0.3.x⁩ (stable)</option><!--#--><option data-hk=\"7.3\" value=\"0.2.x\">v⁨0.2.x⁩ (outdated)</option><option value=\"0.1.x\" data-hk=\"7.4\" selected=\"\">v⁨0.1.x⁩ (outdated)</option><!--/--></select><!--/--><div data-hk=\"3.20\" class=\"docs-links-markdown\"><ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/intro\">Introduction</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/setup\">Setup</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/arch\">Architecture</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/intro\">Building Your First App</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/setup\">Installation and Setup</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/template\">Writing Your First Template</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/app\">Setting up the App Itself</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/cli\">CLI</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/templates\">Templates</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/routing\">Routing</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/error_pages\">Error Pages</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/intro\">Rendering Strategies</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_paths\">Build Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_state\">Build State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/request_state\">Request State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/revalidation\">Revalidation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/incremental\">Incremental generation</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/building\">Building</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/serving\">Serving</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/integrations/actix-web\">Actix Web Integration</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/config_managers\">Config Managers</a></li>\n</ul>\n</div></aside></div></div></div><div class=\"h-full flex w-full\" data-hk=\"3.21\"><div class=\"px-3 w-full sm:mr-auto sm:ml-auto sm:max-w-prose lg:max-w-3xl xl:max-w-4xl 2xl:max-w-5xl\" data-hk=\"3.22\"><!--#--><div class=\"ring-4 ring-red-400 p-4 rounded-lg mt-1\" data-hk=\"3.23\"><div class=\"flex flex-col 2xs:flex-row dark:text-white\" data-hk=\"3.24\"><span data-hk=\"3.25\" class=\"self-center mr-2\" style=\"fill: #f87171;\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"auto\" viewBox=\"0 0 24 24\" width=\"2.25rem\" fill=\"\\#000000\"><path d=\"M12 7c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1zm-.01-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-3h-2v-2h2v2z\"/></svg></span><p data-hk=\"3.26\">This version of the documentation is outdated, and features documented here may work differently now. You can see the latest stable version of the docs <a href=\"en-US/docs/0.3.x/intro\" class=\"underline\">here</a>.</p></div></div><!--/--><main data-hk=\"3.27\" class=\"text-black dark:text-white\"><div data-hk=\"2.0\" class=\"markdown\"><h1>Request State</h1>\n<p>This strategy allows you to define the state for a page at request-time, which gives you access to information like the headers of the user's HTTP request (including any authorization tokens) and real-time factors. This can be useful if you want to render something like a user dashboard on the server, which you wouldn't be able to do with the <em>build state</em> strategy, as it only has access to information at build-time.</p>\n<p>It should be noted that this strategy is much slower than build-time strategies, as it requires extra computations on the server every time a user requests a page. However, this strategy is superior to client-side rendering (rendering a page at build time with fillers for unique content that you then fill in in the browser) in some ways. This strategy is essentially server-side rendering, and you can read more about its performance <a href=\"https://medium.com/walmartglobaltech/the-benefits-of-server-side-rendering-over-client-side-rendering-5d07ff2cefe8\">here</a>.</p>\n<h2>Using with Build State</h2>\n<p>Perseus supports using both build and request state simultaneously, though it's not advised unless absolutely necessary. This will result in the generation of two competing states, one from build and one from request, which you can then amalgamate by using the <code>amalgamate_states</code> strategy. Due to the phenomenally niche nature of this approach, it's not covered in depth in the documentation, but you can check out the <code>showcase</code> example if you want to see it in action (specifically the <code>amalgamate</code> page).</p>\n<h2>Usage</h2>\n<p>You can define a function for this strategy like so (this will tell the user their own IP address):</p>\n<pre><code class=\"language-rust\">use serde::{Deserialize, Serialize};\nuse perseus::ErrorCause;\n\n#[derive(Serialize, Deserialize)]\npub struct IpPageProps {\n    ip: String,\n}\npub async fn get_request_state(_path: String, req: Request) -&gt; Result&lt;String, (String, ErrorCause)&gt; {\n    Ok(serde_json::to_string(&amp;IpPageProps {\n        // Gets the client's IP address\n        ip: format!(\n            &quot;{:?}&quot;,\n            req\n                .headers()\n                .get(&quot;X-Forwarded-For&quot;)\n                .unwrap_or(&amp;perseus::http::HeaderValue::from_str(&quot;hidden from view!&quot;).unwrap())\n        ),\n    })\n    .unwrap())\n}\n</code></pre>\n<p>This function can produce two kinds of errors, broadly: those caused by the server, and those caused by the client. For that reason, you need to return a <code>(String, ErrorCause)</code> tuple, the second part of which specifies who's responsible for the error. This allows Perseus to figure out whether it should send a 400 (client error) or 500 (server error) HTTP status code in the event of an error. This function must also be asynchronous.</p>\n<p>As with the <em>build state</em> strategy, you must return state from this function as a string, and the path provided to this function is the same as the final path at which the page will be rendered.</p>\n<p>You can add this strategy to a template like so:</p>\n<pre><code class=\"language-rust\">template\n\t// ...\n    .request_state_fn(Box::new(get_request_state))\n</code></pre>\n</div></main></div></div></div></div><footer class=\"w-full flex justify-center py-5 bg-gray-100 dark:bg-navy-deep\" data-hk=\"3.28\"><p data-hk=\"3.29\" class=\"dark:text-white mx-5 text-center\"><span data-hk=\"3.30\">© <a href=\"https://github.com/arctic-hen7\" class=\"underline\">arctic-hen7</a> ⁨2021⁩, see license <a href=\"https://github.com/arctic-hen7/perseus/blob/main/LICENSE\" class=\"underline\">here</a>.</span></p></footer><script data-hk=\"2.1\" defer=\"\" src=\".perseus/static/prism.js\"></script><script data-hk=\"2.2\">window.Prism.highlightAll();</script>","state":"{\"title\":\"Request State\",\"content\":\"<h1>Request State</h1>\\n<p>This strategy allows you to define the state for a page at request-time, which gives you access to information like the headers of the user's HTTP request (including any authorization tokens) and real-time factors. This can be useful if you want to render something like a user dashboard on the server, which you wouldn't be able to do with the <em>build state</em> strategy, as it only has access to information at build-time.</p>\\n<p>It should be noted that this strategy is much slower than build-time strategies, as it requires extra computations on the server every time a user requests a page. However, this strategy is superior to client-side rendering (rendering a page at build time with fillers for unique content that you then fill in in the browser) in some ways. This strategy is essentially server-side rendering, and you can read more about its performance <a href=\\\"https://medium.com/walmartglobaltech/the-benefits-of-server-side-rendering-over-client-side-rendering-5d07ff2cefe8\\\">here</a>.</p>\\n<h2>Using with Build State</h2>\\n<p>Perseus supports using both build and request state simultaneously, though it's not advised unless absolutely necessary. This will result in the generation of two competing states, one from build and one from request, which you can then amalgamate by using the <code>amalgamate_states</code> strategy. Due to the phenomenally niche nature of this approach, it's not covered in depth in the documentation, but you can check out the <code>showcase</code> example if you want to see it in action (specifically the <code>amalgamate</code> page).</p>\\n<h2>Usage</h2>\\n<p>You can define a function for this strategy like so (this will tell the user their own IP address):</p>\\n<pre><code class=\\\"language-rust\\\">use serde::{Deserialize, Serialize};\\nuse perseus::ErrorCause;\\n\\n#[derive(Serialize, Deserialize)]\\npub struct IpPageProps {\\n    ip: String,\\n}\\npub async fn get_request_state(_path: String, req: Request) -&gt; Result&lt;String, (String, ErrorCause)&gt; {\\n    Ok(serde_json::to_string(&amp;IpPageProps {\\n        // Gets the client's IP address\\n        ip: format!(\\n            &quot;{:?}&quot;,\\n            req\\n                .headers()\\n                .get(&quot;X-Forwarded-For&quot;)\\n                .unwrap_or(&amp;perseus::http::HeaderValue::from_str(&quot;hidden from view!&quot;).unwrap())\\n        ),\\n    })\\n    .unwrap())\\n}\\n</code></pre>\\n<p>This function can produce two kinds of errors, broadly: those caused by the server, and those caused by the client. For that reason, you need to return a <code>(String, ErrorCause)</code> tuple, the second part of which specifies who's responsible for the error. This allows Perseus to figure out whether it should send a 400 (client error) or 500 (server error) HTTP status code in the event of an error. This function must also be asynchronous.</p>\\n<p>As with the <em>build state</em> strategy, you must return state from this function as a string, and the path provided to this function is the same as the final path at which the page will be rendered.</p>\\n<p>You can add this strategy to a template like so:</p>\\n<pre><code class=\\\"language-rust\\\">template\\n\\t// ...\\n    .request_state_fn(Box::new(get_request_state))\\n</code></pre>\\n\",\"sidebar_content\":\"<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/intro\\\">Introduction</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/setup\\\">Setup</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/arch\\\">Architecture</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/intro\\\">Building Your First App</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/setup\\\">Installation and Setup</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/template\\\">Writing Your First Template</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/app\\\">Setting up the App Itself</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/cli\\\">CLI</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/templates\\\">Templates</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/routing\\\">Routing</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/error_pages\\\">Error Pages</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/intro\\\">Rendering Strategies</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_paths\\\">Build Paths</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_state\\\">Build State</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/request_state\\\">Request State</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/revalidation\\\">Revalidation</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/incremental\\\">Incremental generation</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/building\\\">Building</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/serving\\\">Serving</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/integrations/actix-web\\\">Actix Web Integration</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/config_managers\\\">Config Managers</a></li>\\n</ul>\\n\",\"status\":\"Outdated\",\"manifest\":{\"stable\":\"0.3.x\",\"outdated\":[\"0.2.x\",\"0.1.x\"],\"beta\":[],\"history_map\":{\"0.2.x\":\"v0.2.3\",\"0.3.x\":\"HEAD\",\"0.1.x\":\"v0.1.4\"}},\"current_version\":\"0.1.x\"}","head":"<title data-hk=\"1.0\">Request State | Perseus Docs</title><link data-hk=\"1.1\" href=\".perseus/static/styles/markdown.css\" rel=\"stylesheet\"/><link rel=\"stylesheet\" href=\".perseus/static/styles/docs_links_markdown.css\" data-hk=\"1.2\"/><link href=\".perseus/static/prism.css\" data-hk=\"1.3\" rel=\"stylesheet\"/>"}