{"content":"<header class=\"shadow-md sm:p-2 w-full bg-white dark:text-white dark:bg-navy mb-20\" data-hk=\"3.0\"><div class=\"flex justify-between\" data-hk=\"3.1\"><a href=\"en-US/\" data-hk=\"3.2\" class=\"justify-self-start self-center m-3 ml-5 text-md sm:text-2xl\">Perseus</a><div class=\"md:hidden m-3 mr-5 tham tham-e-spin tham-w-6 \" data-hk=\"3.3\"><div class=\"tham-box\" data-hk=\"3.4\"><div class=\"dark:bg-white tham-inner\" data-hk=\"3.5\"></div></div></div><nav data-hk=\"3.6\" class=\"hidden md:flex\"><ul data-hk=\"3.7\" class=\"mr-5 flex\"><li data-hk=\"4.0\" class=\"m-3 p-1\"><a data-hk=\"4.1\" href=\"en-US/docs\" class=\"px-2\">Docs</a></li><li data-hk=\"4.2\" class=\"m-3 p-1\"><a class=\"px-2\" data-hk=\"4.3\" href=\"en-US/comparisons\">Comparisons</a></li><li data-hk=\"4.4\" class=\"m-3 p-1\"><a class=\"px-2\" data-hk=\"4.5\" href=\"en-US/plugins\">Plugins</a></li></ul></nav></div><nav data-hk=\"3.8\" id=\"mobile_nav_menu\" class=\"md:hidden w-full text-center justify-center overflow-y-scroll hidden\"><div class=\"mr-5 overflow-y-scroll\" style=\"max-height: 500px\" data-hk=\"3.9\"><ul data-hk=\"3.10\"><li data-hk=\"5.0\" class=\"m-3 p-1\"><a href=\"en-US/docs\" data-hk=\"5.1\" class=\"px-2\">Docs</a></li><li class=\"m-3 p-1\" data-hk=\"5.2\"><a href=\"en-US/comparisons\" class=\"px-2\" data-hk=\"5.3\">Comparisons</a></li><li data-hk=\"5.4\" class=\"m-3 p-1\"><a data-hk=\"5.5\" class=\"px-2\" href=\"en-US/plugins\">Plugins</a></li></ul><hr data-hk=\"3.11\"/><div data-hk=\"3.12\" class=\"text-left p-3\"><!--#--><!----><select class=\"p-2 rounded-md text-white bg-indigo-500\" data-hk=\"6.0\"><option data-hk=\"6.1\" value=\"next\">Next (unreleased)</option><!--#--><!--/--><option value=\"0.3.0-0.3.2\" data-hk=\"6.2\">v⁨0.3.0-0.3.2⁩ (stable)</option><!--#--><option data-hk=\"6.3\" value=\"0.2.x\">v⁨0.2.x⁩ (outdated)</option><option data-hk=\"6.4\" selected=\"\" value=\"0.1.x\">v⁨0.1.x⁩ (outdated)</option><!--/--></select><!--/--><div class=\"docs-links-markdown\" data-hk=\"3.13\"><ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/intro\">Introduction</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/setup\">Setup</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/arch\">Architecture</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/intro\">Building Your First App</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/setup\">Installation and Setup</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/template\">Writing Your First Template</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/app\">Setting up the App Itself</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/cli\">CLI</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/templates\">Templates</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/routing\">Routing</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/error_pages\">Error Pages</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/intro\">Rendering Strategies</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_paths\">Build Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_state\">Build State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/request_state\">Request State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/revalidation\">Revalidation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/incremental\">Incremental generation</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/building\">Building</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/serving\">Serving</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/integrations/actix-web\">Actix Web Integration</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/config_managers\">Config Managers</a></li>\n</ul>\n</div></div></div></nav></header><div data-hk=\"3.14\" class=\"mt-14 xs:mt-16 sm:mt-20 lg:mt-25 overflow-y-auto flex\"><div data-hk=\"3.15\" class=\"flex w-full\"><div data-hk=\"3.16\" class=\"h-full hidden md:block max-w-xs w-full border-r\"><div data-hk=\"3.17\" class=\"mr-5\"><div class=\"text-left text-black dark:text-white p-3\" data-hk=\"3.18\"><aside data-hk=\"3.19\"><!--#--><!----><select data-hk=\"7.0\" class=\"p-2 rounded-md text-white bg-indigo-500\"><option data-hk=\"7.1\" value=\"next\">Next (unreleased)</option><!--#--><!--/--><option data-hk=\"7.2\" value=\"0.3.0-0.3.2\">v⁨0.3.0-0.3.2⁩ (stable)</option><!--#--><option data-hk=\"7.3\" value=\"0.2.x\">v⁨0.2.x⁩ (outdated)</option><option selected=\"\" data-hk=\"7.4\" value=\"0.1.x\">v⁨0.1.x⁩ (outdated)</option><!--/--></select><!--/--><div data-hk=\"3.20\" class=\"docs-links-markdown\"><ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/intro\">Introduction</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/setup\">Setup</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/arch\">Architecture</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/intro\">Building Your First App</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/setup\">Installation and Setup</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/template\">Writing Your First Template</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/app\">Setting up the App Itself</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/cli\">CLI</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/templates\">Templates</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/routing\">Routing</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/error_pages\">Error Pages</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/intro\">Rendering Strategies</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_paths\">Build Paths</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_state\">Build State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/request_state\">Request State</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/revalidation\">Revalidation</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/incremental\">Incremental generation</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/building\">Building</a></li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/serving\">Serving</a>\n<ul>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/integrations/actix-web\">Actix Web Integration</a></li>\n</ul>\n</li>\n<li><a href=\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/config_managers\">Config Managers</a></li>\n</ul>\n</div></aside></div></div></div><div data-hk=\"3.21\" class=\"h-full flex w-full\"><div data-hk=\"3.22\" class=\"px-3 w-full sm:mr-auto sm:ml-auto sm:max-w-prose lg:max-w-3xl xl:max-w-4xl 2xl:max-w-5xl\"><!--#--><div class=\"ring-4 ring-red-400 p-4 rounded-lg mt-1\" data-hk=\"3.23\"><div data-hk=\"3.24\" class=\"flex flex-col 2xs:flex-row dark:text-white\"><span style=\"fill: #f87171;\" class=\"self-center mr-2\" data-hk=\"3.25\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"auto\" viewBox=\"0 0 24 24\" width=\"2.25rem\" fill=\"\\#000000\"><path d=\"M12 7c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1zm-.01-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-3h-2v-2h2v2z\"/></svg></span><p data-hk=\"3.26\">This version of the documentation is outdated, and features documented here may work differently now. You can see the latest stable version of the docs <a href=\"en-US/docs/0.3.x/intro\" class=\"underline\">here</a>.</p></div></div><!--/--><main class=\"text-black dark:text-white\" data-hk=\"3.27\"><div class=\"markdown\" data-hk=\"2.0\"><h1>Architecture</h1>\n<p>Perseus is a complex system, and this page will aim to explain the basics in a beginner-friendly way. If you've already used similar frameworks from the JS world like NextJS, then some of this may be familiar to you. If you're having trouble following along, please <a href=\"https://github.com/arctic-hen7/perseus/issues/new/choose\">open an issue</a> and ask us to clarify some sections, because this page in particular should be accessible to everyone. If you'd like more specific help, <a href=\"\">ask on Gitter</a>!</p>\n<h2>Templates and Pages</h2>\n<p>The core of Perseus is the idea of templates. When you create a Perseus app, what you're basically doing is telling Perseus how to compile your code into a series of <em>pages</em>. <strong>Each page has a unique URL on your final website.</strong> If you have a blog, and every post is stored as something like <code>post/title</code>, then each post would be a unique page.</p>\n<p>But this doesn't mean you have to write the code for every page individually! Perseus does this for you, and only asks you to write <em>templates</em>. A template can generate one page or many, and a great example of one would be a <code>post</code> template. Each template has a <em>root path</em>, which is essentially like the space on your website that that template controls. For example, a post template might control <code>/post</code>, meaning it can render pages at <code>/post</code>, <code>/post/test</code>, <code>/post/longer/path</code>, etc. In theory, a template could render pages outside its domain, but this would be a bad idea for structure, and makes your code difficult to understand.</p>\n<h3>State</h3>\n<p>What differentiates pages from templates is <em>state</em>, which tells a page how to fill out its template to give unique content. For example, our post template would probably have a <code>content</code> field in its state, and its pages would use that to render their unique content!</p>\n<p>In terms of writing code, a page's state is just a <code>struct</code> that can be serialized and deserialized with <a href=\"https://serde.rs\">Serde</a>.</p>\n<h2>Rendering Strategies</h2>\n<p>Each template has a rendering strategy, which it uses to create its pages. There are a number of rendering strategies in Perseus, each of which is documented in detail in its own section. What's important to understand for now is that there are two main ways a template can render pages, at <em>build time</em>, or at <em>request time</em>. If a template renders at build time, it generates the code for your pages when you build your app, which means you end up serving static pages. This is <em>really fast</em>. However, sometimes you need information specific to each request to render a page (e.g. an authentication token), and you can't render at build. Instead, you'd render at request time, which gives you access to information about the HTTP request a user sent for your page.</p>\n<p>Here's a list of Perseus' currently supported rendering strategies. These can all be combined, but some combinations make more sense than others.</p>\n<table><thead><tr><th>Strategy</th><th>Description</th><th>Type</th></tr></thead><tbody>\n<tr><td>Build paths</td><td>Generates a series of pages for a template</td><td>Build</td></tr>\n<tr><td>Build state</td><td>Generates page state</td><td>Build</td></tr>\n<tr><td>Request state</td><td>Generates page state</td><td>Request</td></tr>\n<tr><td>Revalidation</td><td>Rebuilds pages conditionally</td><td>Hybrid</td></tr>\n<tr><td>Incremental generation</td><td>Builds pages on-demand</td><td>Hybrid</td></tr>\n</tbody></table>\n<p>There are two <em>hybrid</em> strategies listed above. They're a little more complicated, and out of the scope of this page, but they operate at both build <em>and</em> request-time, allowing you to reap the benefits of both worlds!</p>\n<h2>Routing</h2>\n<p><em>This section describes how Perseus works under the hood. Skip it if you want.</em></p>\n<p>Perseus doesn't just host your pages at their URLs though. In fact, Perseus has a generic handler for <em>any URL</em>, which returns what we call the <em>app shell</em>. That's a concept from the single-page app (e.g. ReactJS), where your app always has a constant shell around it, and each page is loaded into that shell, making page transitions more seamless. Perseus adopts this as well, but with the added benefits of super-fast static rendering strategies and a more lightweight shell.</p>\n<p>The shell includes a router (courtesy of <a href=\"https://github.com/sycamore-rs/sycamore\">Sycamore</a>), which determines what page the user wants, and then sends a request to a special endpoint behind <code>/.perseus</code>. That then renders the page and returns some static HTML and the page's state.</p>\n</div></main></div></div></div></div><footer data-hk=\"3.28\" class=\"w-full flex justify-center py-5 bg-gray-100 dark:bg-navy-deep\"><p data-hk=\"3.29\" class=\"dark:text-white mx-5 text-center\"><span data-hk=\"3.30\">© <a href=\"https://github.com/arctic-hen7\" class=\"underline\">arctic-hen7</a> ⁨2021⁩, see license <a href=\"https://github.com/arctic-hen7/perseus/blob/main/LICENSE\" class=\"underline\">here</a>.</span></p></footer><script defer=\"\" data-hk=\"2.1\" src=\".perseus/static/prism.js\"></script><script data-hk=\"2.2\">window.Prism.highlightAll();</script>","state":"{\"title\":\"Architecture\",\"content\":\"<h1>Architecture</h1>\\n<p>Perseus is a complex system, and this page will aim to explain the basics in a beginner-friendly way. If you've already used similar frameworks from the JS world like NextJS, then some of this may be familiar to you. If you're having trouble following along, please <a href=\\\"https://github.com/arctic-hen7/perseus/issues/new/choose\\\">open an issue</a> and ask us to clarify some sections, because this page in particular should be accessible to everyone. If you'd like more specific help, <a href=\\\"\\\">ask on Gitter</a>!</p>\\n<h2>Templates and Pages</h2>\\n<p>The core of Perseus is the idea of templates. When you create a Perseus app, what you're basically doing is telling Perseus how to compile your code into a series of <em>pages</em>. <strong>Each page has a unique URL on your final website.</strong> If you have a blog, and every post is stored as something like <code>post/title</code>, then each post would be a unique page.</p>\\n<p>But this doesn't mean you have to write the code for every page individually! Perseus does this for you, and only asks you to write <em>templates</em>. A template can generate one page or many, and a great example of one would be a <code>post</code> template. Each template has a <em>root path</em>, which is essentially like the space on your website that that template controls. For example, a post template might control <code>/post</code>, meaning it can render pages at <code>/post</code>, <code>/post/test</code>, <code>/post/longer/path</code>, etc. In theory, a template could render pages outside its domain, but this would be a bad idea for structure, and makes your code difficult to understand.</p>\\n<h3>State</h3>\\n<p>What differentiates pages from templates is <em>state</em>, which tells a page how to fill out its template to give unique content. For example, our post template would probably have a <code>content</code> field in its state, and its pages would use that to render their unique content!</p>\\n<p>In terms of writing code, a page's state is just a <code>struct</code> that can be serialized and deserialized with <a href=\\\"https://serde.rs\\\">Serde</a>.</p>\\n<h2>Rendering Strategies</h2>\\n<p>Each template has a rendering strategy, which it uses to create its pages. There are a number of rendering strategies in Perseus, each of which is documented in detail in its own section. What's important to understand for now is that there are two main ways a template can render pages, at <em>build time</em>, or at <em>request time</em>. If a template renders at build time, it generates the code for your pages when you build your app, which means you end up serving static pages. This is <em>really fast</em>. However, sometimes you need information specific to each request to render a page (e.g. an authentication token), and you can't render at build. Instead, you'd render at request time, which gives you access to information about the HTTP request a user sent for your page.</p>\\n<p>Here's a list of Perseus' currently supported rendering strategies. These can all be combined, but some combinations make more sense than others.</p>\\n<table><thead><tr><th>Strategy</th><th>Description</th><th>Type</th></tr></thead><tbody>\\n<tr><td>Build paths</td><td>Generates a series of pages for a template</td><td>Build</td></tr>\\n<tr><td>Build state</td><td>Generates page state</td><td>Build</td></tr>\\n<tr><td>Request state</td><td>Generates page state</td><td>Request</td></tr>\\n<tr><td>Revalidation</td><td>Rebuilds pages conditionally</td><td>Hybrid</td></tr>\\n<tr><td>Incremental generation</td><td>Builds pages on-demand</td><td>Hybrid</td></tr>\\n</tbody></table>\\n<p>There are two <em>hybrid</em> strategies listed above. They're a little more complicated, and out of the scope of this page, but they operate at both build <em>and</em> request-time, allowing you to reap the benefits of both worlds!</p>\\n<h2>Routing</h2>\\n<p><em>This section describes how Perseus works under the hood. Skip it if you want.</em></p>\\n<p>Perseus doesn't just host your pages at their URLs though. In fact, Perseus has a generic handler for <em>any URL</em>, which returns what we call the <em>app shell</em>. That's a concept from the single-page app (e.g. ReactJS), where your app always has a constant shell around it, and each page is loaded into that shell, making page transitions more seamless. Perseus adopts this as well, but with the added benefits of super-fast static rendering strategies and a more lightweight shell.</p>\\n<p>The shell includes a router (courtesy of <a href=\\\"https://github.com/sycamore-rs/sycamore\\\">Sycamore</a>), which determines what page the user wants, and then sends a request to a special endpoint behind <code>/.perseus</code>. That then renders the page and returns some static HTML and the page's state.</p>\\n\",\"sidebar_content\":\"<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/intro\\\">Introduction</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/setup\\\">Setup</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/arch\\\">Architecture</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/intro\\\">Building Your First App</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/setup\\\">Installation and Setup</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/template\\\">Writing Your First Template</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/tutorials/first_app/app\\\">Setting up the App Itself</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/cli\\\">CLI</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/templates\\\">Templates</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/routing\\\">Routing</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/error_pages\\\">Error Pages</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/intro\\\">Rendering Strategies</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_paths\\\">Build Paths</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/build_state\\\">Build State</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/request_state\\\">Request State</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/revalidation\\\">Revalidation</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/strategies/incremental\\\">Incremental generation</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/building\\\">Building</a></li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/serving\\\">Serving</a>\\n<ul>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/integrations/actix-web\\\">Actix Web Integration</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://arctic-hen7.github.io/perseus/en-US/docs/0.1.x/config_managers\\\">Config Managers</a></li>\\n</ul>\\n\",\"status\":\"Outdated\",\"manifest\":{\"stable\":\"0.3.0-0.3.2\",\"outdated\":[\"0.2.x\",\"0.1.x\"],\"beta\":[],\"history_map\":{\"0.3.0-0.3.2\":\"v0.3.2\",\"0.1.x\":\"v0.1.4\",\"0.2.x\":\"v0.2.3\"}},\"current_version\":\"0.1.x\"}","head":"<title data-hk=\"1.0\">Architecture | Perseus Docs</title><link data-hk=\"1.1\" href=\".perseus/static/styles/markdown.css\" rel=\"stylesheet\"/><link href=\".perseus/static/styles/docs_links_markdown.css\" data-hk=\"1.2\" rel=\"stylesheet\"/><link rel=\"stylesheet\" href=\".perseus/static/prism.css\" data-hk=\"1.3\"/>"}